{"version":3,"sources":["services/coinApi.js","actions/index.js","images/logo.png","pages/Login.js","components/Header.jsx","components/ExpenditureForm.jsx","components/DeleteAndEditButton.jsx","components/ExpenseTable.jsx","pages/Wallet.js","pages/teste.js","App.js","serviceWorker.js","reducers/user.js","reducers/wallet.js","reducers/index.js","store/index.js","index.js"],"names":["coinApi","fetch","then","res","json","USDT","Promise","resolve","catch","error","reject","SET_USER_EMAIL","SET_COINS","SET_EXPENDITURE","DELETE_EXPENDITURE","SET_CUR_EXPENDITURE","EDIT_EXPENDITURE","setCoins","coins","type","payload","Login","state","email","password","isEnable","formValidator","bind","handleChange","submitForm","this","test","length","setState","target","name","value","event","props","history","setEmailGlobal","preventDefault","push","className","src","logo","alt","onSubmit","htmlFor","id","placeholder","required","autoComplete","onChange","disabled","React","Component","connect","dispatch","setUserEmail","classNames","classes","filter","Boolean","join","Header","getTotal","expenses","Number","reduce","acc","cur","exchangeRates","currency","ask","toFixed","to","Button","Group","as","open","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Panel","focus","user","wallet","INITIAL_FORM","description","method","tag","ExpenditureForm","forms","isEditing","submit","renderInputs","renderSubmitButton","prev","a","setExpenditure","editExpenditure","map","key","bgColor","nextProps","curExpenditure","defaultProps","currencies","expenditure","setExpenditureAction","editExpenditureAction","DeleteAndEditButton","deleteExpense","editExpense","deleteById","setCurExpense","onClick","deleteExpenditure","setCurExpenseAction","ExpenseTable","renderTableRow","expense","replace","Wallet","getCoins","Object","keys","ChartBarIcon","CursorClickIcon","ShieldCheckIcon","ViewGridIcon","RefreshIcon","PlayIcon","PhoneIcon","SupportIcon","BookmarkAltIcon","CalendarIcon","people","title","department","role","image","Exampeeeele","scope","person","href","App","exact","path","component","teste","window","location","hostname","match","INITIAL_STATE","action","find","rootReducers","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.aaf7bf5d.chunk.js","sourcesContent":["const coinApi = () => (\n  fetch('https://economia.awesomeapi.com.br/json/all')\n    .then((res) => res.json())\n    .then((res) => {\n      if (res.USDT) delete res.USDT;\n      return Promise.resolve(res);\n    })\n    .catch((error) => Promise.reject(error))\n);\n\nexport default coinApi;\n","import coinApi from '../services/coinApi';\n\nexport const SET_USER_EMAIL = 'SET_USER_EMAIL';\nexport const SET_COINS = 'SET_COINS';\nexport const SET_EXPENDITURE = 'SET_EXPENDITURE';\nexport const DELETE_EXPENDITURE = 'DELETE_EXPENDITURE';\nexport const SET_CUR_EXPENDITURE = 'SET_CUR_EXPENDITURE';\nexport const EDIT_EXPENDITURE = 'EDIT_EXPENDITURE';\n\nexport const setUserEmail = (email) => ({\n  type: SET_USER_EMAIL,\n  payload: email,\n});\n\nexport const setCoins = (coins) => ({\n  type: SET_COINS,\n  payload: coins,\n});\n\nexport const fetchCoins = () => async (dispatch) => {\n  // dispatch(uma action de loading)\n  const coins = await coinApi();\n  dispatch(setCoins(Object.keys(coins)));\n};\n\nexport const setExpenditure = (expenditure) => async (dispatch) => {\n  const exchangeRates = await coinApi();\n  dispatch({\n    type: SET_EXPENDITURE,\n    payload: { ...expenditure, exchangeRates },\n  });\n};\n\nexport const deleteExpenditure = (id) => ({\n  type: DELETE_EXPENDITURE,\n  payload: id,\n});\n\nexport const setCurExpenditure = (id) => ({\n  type: SET_CUR_EXPENDITURE,\n  payload: id,\n});\n\nexport const editExpenditure = (expenditure) => ({\n  type: EDIT_EXPENDITURE,\n  payload: expenditure,\n});\n","export default __webpack_public_path__ + \"static/media/logo.1849aa72.png\";","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { setUserEmail } from '../actions';\nimport { LockClosedIcon } from '@heroicons/react/solid';\nimport logo from '../images/logo.png';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: '',\n      isEnable: false,\n    };\n    this.formValidator = this.formValidator.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.submitForm = this.submitForm.bind(this);\n  }\n\n  formValidator() {\n    const { email, password } = this.state;\n    const passwdLength = 6;\n    const regex = /^[a-z0-9.]+@[a-z0-9]+\\.[a-z]/i;\n    const isEnable = regex.test(email) && password.length >= passwdLength;\n    this.setState({ isEnable });\n  }\n\n  handleChange({ target: { name, value } }) {\n    this.setState({ [name]: value }, () => this.formValidator());\n  }\n\n  submitForm(event) {\n    const { email } = this.state;\n    const { history, setEmailGlobal } = this.props;\n    event.preventDefault();\n    setEmailGlobal(email);\n    history.push('/carteira');\n  }\n\n  render() {\n    const { isEnable } = this.state;\n    return (\n      <div className=\"min-h-full flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-md w-full space-y-8 md:relative md:rounded-xl md:ring-1 md:ring-black md:ring-opacity-5 md:shadow-sm w-full pt-8 pb-6 md:px-6 sm:px-0 md:bg-gray-100\">\n          <div>\n            <img\n              className=\"mx-auto h-40 w-auto\"\n              src={ logo }\n              alt=\"WalletLogo\"\n            />\n          </div>\n          <form className=\"mt-8 space-y-6\" onSubmit={this.submitForm}>\n            <div className=\"rounded-md shadow-sm -space-y-px\">\n              <div>\n                <label htmlFor=\"email-address\" className=\"sr-only\">\n                  Email\n                </label>\n                <input\n                  id=\"email-address\"\n                  name=\"email\"\n                  type=\"email\"\n                  data-testid=\"email-input\"\n                  placeholder=\"Email\"\n                  required\n                  autoComplete=\"email\"\n                  onChange={this.handleChange}\n                  className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                />\n              </div>\n              <div>\n                <label htmlFor=\"password\" className=\"sr-only\">\n                  Senha\n                </label>\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  data-testid=\"password-input\"\n                  autoComplete=\"current-password\"\n                  placeholder=\"Senha\"\n                  required\n                  className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                  onChange={this.handleChange}\n                />\n              </div>\n            </div>\n            <div>\n              <button\n                type=\"submit\"\n                className={` ${isEnable ? 'cursor-pointer' : 'cursor-not-allowed opacity-70'} group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500`}\n                disabled={!isEnable}\n              >\n                <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\">\n                  {isEnable ? null : <LockClosedIcon className=\"h-5 w-5 text-indigo-500 group-hover:text-indigo-400\" aria-hidden=\"true\" />}\n                </span>\n                Entrar\n              </button>\n            </div>\n            \n            \n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\n  setEmailGlobal: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  setEmailGlobal: (email) => dispatch(setUserEmail(email)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Popover, Transition } from '@headlessui/react'\nimport { Link } from 'react-router-dom';\nimport logo from '../images/logo.png';\nimport {\n  MenuIcon,\n  XIcon,\n  CashIcon,\n  MailIcon\n} from '@heroicons/react/outline'\nimport { ChevronDownIcon } from '@heroicons/react/solid'\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nclass Header extends React.Component {\n  constructor() {\n    super();\n    this.getTotal = this.getTotal.bind(this);\n  }\n\n  getTotal() {\n    const { expenses } = this.props;\n    return Number(expenses.reduce((acc, cur) => {\n      const brlValue = Number(cur.value) * Number(cur.exchangeRates[cur.currency].ask);\n      return acc + brlValue;\n    }, 0)).toFixed(2);\n  }\n\n  render() {\n    const { email } = this.props;\n    return (\n      <Popover className=\"relative bg-white\">\n        <header className=\"max-w-7xl mx-auto px-4 sm:px-6\">\n          <div className=\"flex justify-between items-center border-b-2 border-gray-100 py-2 md:justify-start md:space-x-10\">\n            <div className=\"flex justify-start lg:w-0 lg:flex-1\">\n              <Link to=\"/\">\n                <span className=\"sr-only\">TrybeWallet</span>\n                <img\n                  className=\"h-11 w-auto\"\n                  src={ logo }\n                  alt=\"Logo\"\n                />\n              </Link>\n            </div>\n            <div className=\"-mr-2 -my-2 md:hidden\">\n              <Popover.Button className=\"bg-white rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\">\n                <span className=\"sr-only\">Abrir menu</span>\n                <MenuIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n              </Popover.Button>\n            </div>\n            <Popover.Group as=\"nav\" className=\"hidden md:flex space-x-10\">\n              <Popover className=\"relative\">\n                {({open}) => (\n                  <>\n                    <Popover.Button\n                      className={classNames(\n                        open ? 'text-gray-900' : 'text-gray-500',\n                        'group bg-white rounded-md inline-flex items-center text-base font-medium hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'\n                      )}\n                    >\n                      <span>Carteira</span>\n                      <ChevronDownIcon\n                        className={classNames(\n                          open ? 'text-gray-600' : 'text-gray-400',\n                          'ml-2 h-5 w-5 group-hover:text-gray-500'\n                        )}\n                        aria-hidden=\"true\"\n                      />\n                    </Popover.Button>\n                    <Transition\n                      as={Fragment}\n                      enter=\"transition ease-out duration-200\"\n                      enterFrom=\"opacity-0 translate-y-1\"\n                      enterTo=\"opacity-100 translate-y-0\"\n                      leave=\"transition ease-in duration-150\"\n                      leaveFrom=\"opacity-100 translate-y-0\"\n                      leaveTo=\"opacity-0 translate-y-1\"\n                    >\n                      <Popover.Panel className=\"absolute z-10 -ml-4 mt-3 transform px-2 w-screen max-w-md sm:px-0 lg:ml-0 lg:left-1/2 lg:-translate-x-1/2\">\n                        <div className=\"rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 overflow-hidden\">\n                          <div className=\"relative grid gap-6 bg-white px-5 py-6 sm:gap-8 sm:p-8\">\n                            <div className=\"-m-3 p-3 flex items-start rounded-lg hover:bg-gray-50\">\n                              <CashIcon className=\"flex-shrink-0 h-6 w-6 text-indigo-600\" aria-hidden=\"true\" />\n                              <div className=\"ml-4\">\n                                <p className=\"text-base font-medium text-gray-900\">{`${this.getTotal()} BRL`}</p>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </Popover.Panel>\n                    </Transition>\n                  </>\n                )}\n              </Popover>\n              <Popover className=\"relative\">\n                {({ open }) => (\n                  <>\n                    <Popover.Button\n                      className={classNames(\n                        open ? 'text-gray-900' : 'text-gray-500',\n                        'group bg-white rounded-md inline-flex items-center text-base font-medium hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'\n                      )}\n                    >\n                      <span>Usuário</span>\n                      <ChevronDownIcon\n                        className={classNames(\n                          open ? 'text-gray-600' : 'text-gray-400',\n                          'ml-2 h-5 w-5 group-hover:text-gray-500'\n                        )}\n                        aria-hidden=\"true\"\n                      />\n                    </Popover.Button>\n                    <Transition\n                      as={Fragment}\n                      enter=\"transition ease-out duration-200\"\n                      enterFrom=\"opacity-0 translate-y-1\"\n                      enterTo=\"opacity-100 translate-y-0\"\n                      leave=\"transition ease-in duration-150\"\n                      leaveFrom=\"opacity-100 translate-y-0\"\n                      leaveTo=\"opacity-0 translate-y-1\"\n                    >\n                      <Popover.Panel className=\"absolute z-10 -ml-4 mt-3 transform px-2 w-screen max-w-md sm:px-0 lg:ml-0 lg:left-1/2 lg:-translate-x-1/2\">\n                        <div className=\"rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 overflow-hidden\">\n                          <div className=\"relative grid gap-6 bg-white px-5 py-6 sm:gap-8 sm:p-8\">\n                            <div className=\"-m-3 p-3 flex items-start rounded-lg hover:bg-gray-50\">\n                              <MailIcon className=\"flex-shrink-0 h-6 w-6 text-indigo-600\" aria-hidden=\"true\" />\n                              <div className=\"ml-4\">\n                                <p className=\"text-base font-medium text-gray-900\">{email || 'default-email@trybewallet.com'}</p>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </Popover.Panel>\n                    </Transition>\n                  </>\n                )}\n              </Popover>\n            </Popover.Group>\n            <div className=\"hidden md:flex items-center justify-end md:flex-1 lg:w-0\">\n              <Link to=\"/\" className=\"ml-8 whitespace-nowrap inline-flex items-center justify-center px-6 py-2 border border-transparent rounded-md shadow-sm text-base font-medium text-white bg-indigo-600 hover:bg-indigo-700\">\n                Sair\n              </Link>\n            </div>\n          </div>\n        </header>\n        <Transition\n          as={Fragment}\n          enter=\"duration-200 ease-out\"\n          enterFrom=\"opacity-0 scale-95\"\n          enterTo=\"opacity-100 scale-100\"\n          leave=\"duration-100 ease-in\"\n          leaveFrom=\"opacity-100 scale-100\"\n          leaveTo=\"opacity-0 scale-95\"\n        >\n          <Popover.Panel focus className=\"absolute top-0 inset-x-0 p-2 transition transform origin-top-right md:hidden\">\n            <div className=\"rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 bg-white divide-y-2 divide-gray-50\">\n              <div className=\"pt-5 pb-6 px-5\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <img\n                      className=\"h-11 w-auto\"\n                      src={logo}\n                      alt=\"Logo\"\n                    />\n                  </div>\n                  <div className=\"-mr-2\">\n                    <Popover.Button className=\"bg-white rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\">\n                      <span className=\"sr-only\">Fechar menu</span>\n                      <XIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                    </Popover.Button>\n                  </div>\n                </div>\n                <div className=\"mt-6\">\n                  <div className=\"grid gap-y-8\">\n                    <div\n                      className=\"-m-3 p-3 flex items-center rounded-md hover:bg-gray-50\"\n                    >\n                      <CashIcon className=\"flex-shrink-0 h-6 w-6 text-indigo-600\" aria-hidden=\"true\" />\n                      <span className=\"ml-3 text-base font-medium text-gray-900\">{`${this.getTotal()} BRL`}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"py-3 px-5 space-y-6\">\n                <div className=\"grid grid-cols-2 gap-y-4 gap-x-8\">\n                  <div\n                    className=\"-m-3 p-3 flex items-center rounded-md hover:bg-gray-50\"\n                  >\n                    <MailIcon className=\"flex-shrink-0 h-6 w-6 text-indigo-600\" aria-hidden=\"true\" />\n                    <span className=\"ml-3 text-base font-medium text-gray-900\">{email || 'default-email@trybewallet.com'}</span>\n                  </div>\n                </div>\n                <div>\n                  <Link\n                    to=\"/\"\n                    className=\"w-full flex items-center justify-center px-4 py-2 border border-transparent rounded-md shadow-sm text-base font-medium text-white bg-indigo-600 hover:bg-indigo-700\"\n                  >\n                    Sair\n                  </Link>\n                </div>\n              </div>\n            </div>\n          </Popover.Panel>\n        </Transition>\n      </Popover>  \n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  email: state.user.email,\n  expenses: state.wallet.expenses,\n});\n\nHeader.propTypes = {\n  email: PropTypes.string.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.any).isRequired,\n};\n\nexport default connect(mapStateToProps)(Header);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  setExpenditure as setExpenditureAction,\n  editExpenditure as editExpenditureAction } from '../actions';\nimport { PencilAltIcon } from '@heroicons/react/outline'\nimport { PlusCircleIcon } from '@heroicons/react/solid';\n\nconst INITIAL_FORM = {\n  value: '',\n  description: '',\n  currency: 'USD',\n  method: 'Dinheiro',\n  tag: 'Alimentação',\n};\n\nclass ExpenditureForm extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      forms: INITIAL_FORM,\n      isEditing: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.submit = this.submit.bind(this);\n    this.renderInputs = this.renderInputs.bind(this);\n    this.renderSubmitButton = this.renderSubmitButton.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, state) {\n    const { isEditing, curExpenditure } = nextProps;\n    if (isEditing && isEditing !== state.isEditing) {\n      return {\n        forms: curExpenditure,\n        isEditing,\n      };\n    } if (!isEditing && isEditing !== state.isEditing) {\n      return {\n        forms: INITIAL_FORM,\n        isEditing,\n      };\n    }\n    return null;\n  }\n\n  handleChange({ target: { id, value } }) {\n    this.setState((prev) => ({ forms: { ...prev.forms, [id]: value } }));\n  }\n\n  async submit(event) {\n    event.preventDefault();\n    const { setExpenditure, editExpenditure } = this.props;\n    const { forms, isEditing } = this.state;\n    if (isEditing) return editExpenditure(forms);\n    setExpenditure(forms);\n    this.setState({ forms: INITIAL_FORM });\n  }\n\n  renderInputs() {\n    const { forms: { value, description, currency, method, tag } } = this.state;\n    const { coins } = this.props;\n    return (\n      <>\n        <div className=\"col-span-12 md:col-span-4\">\n          <label htmlFor=\"value\" className=\"ml-2 block text-sm font-medium text-gray-700\">\n            Valor\n          </label>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n            <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n              <span className=\"text-gray-500 sm:text-sm\">$</span>\n            </div>\n            <input\n              type=\"number\"\n              id=\"value\"\n              value={value}\n              placeholder=\"Valor\"\n              onChange={this.handleChange}\n              className=\"py-2 focus:ring-indigo-500 focus:border-indigo-500 block w-full pl-5 pr-12 sm:text-sm border-gray-300 rounded-md border-2\"\n            />\n            <div className=\"absolute inset-y-0 right-0 flex items-center\">\n              <label htmlFor=\"currency\" className=\"sr-only\">\n                Moeda\n              </label>\n              <select\n                id=\"currency\"\n                name=\"currency\"\n                className=\"focus:ring-indigo-500 focus:border-indigo-500 h-full py-0 pl-4 mr-1 border-transparent bg-transparent text-gray-500 sm:text-sm rounded-md\"\n                value={ currency }\n                onChange={this.handleChange}\n              >\n                {coins.map((cur) => <option key={cur}>{cur}</option>)}\n              </select>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-span-12 md:col-span-4\">\n          <label htmlFor=\"method\" className=\"ml-2 block text-sm font-medium text-gray-700\">\n            Método de pagamento\n          </label>\n          <select onChange={this.handleChange} id=\"method\" value={method} className=\"py-2 px-2 mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md border-2\">\n            {['Dinheiro', 'Cartão de crédito', 'Cartão de débito'].map((cur) =>\n              (<option key={cur}>{cur}</option>))}\n          </select>\n        </div>\n        <div className=\"col-span-12 md:col-span-4\">\n          <label htmlFor=\"tag\" className=\"ml-2 block text-sm font-medium text-gray-700\">\n            Tag\n          </label>\n          <select onChange={this.handleChange} id=\"tag\" value={tag} className=\"py-2 px-2 mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md border-2\">\n            {['Alimentação', 'Lazer', 'Trabalho', 'Transporte', 'Saúde'].map((cur) => <option key={cur}>{cur}</option>)}\n          </select>\n        </div>\n        <div className=\"col-span-12\">\n          <label htmlFor=\"description\" className=\"ml-2 block text-sm font-medium text-gray-700\">\n            Descrição\n          </label>\n          <input\n            type=\"text\"\n            id=\"description\"\n            value={description}\n            placeholder=\"Descrição\"\n            onChange={this.handleChange}\n            className=\"py-2 px-2 mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md border-2\"\n          />\n        </div>\n      </>\n    );\n  }\n\n  renderSubmitButton() {\n    const { isEditing } = this.state;\n    if (!isEditing) return (\n      <button type=\"submit\" className=\"mt-2 col-span-12 whitespace-nowrap inline-flex items-center justify-center px-6 py-2 border border-transparent rounded-md shadow-sm text-base font-medium text-white bg-green-500 hover:bg-green-600\">\n        <PlusCircleIcon className=\"h-6 w-6 mr-2\" aria-hidden=\"true\" />\n        Adicionar despesa\n      </button>\n    );\n    return (\n      <button type=\"submit\" className=\"mt-2 col-span-12 whitespace-nowrap inline-flex items-center justify-center px-6 py-2 border border-transparent rounded-md shadow-sm text-base font-medium text-white bg-yellow-500 hover:bg-yellow-600\">\n        <PencilAltIcon className=\"h-6 w-6 mr-2\" aria-hidden=\"true\" />\n        Editar despesa\n      </button>\n    );\n  }\n\n  render() {\n    const { isEditing } = this.state;\n    const bgColor = isEditing ? 'bg-green-100' : 'bg-white'\n    return (\n      <form onSubmit={this.submit} className=\"max-w-7xl mx-auto px-4 sm:px-6 mt-5 md:col-span-2\">\n        <div className=\"shadow overflow-hidden sm:rounded-md\">\n          <div className={`${bgColor} px-4 py-5 sm:p-6`}>\n            <div className=\"grid grid-cols-12 gap-2\">\n              {this.renderInputs()}\n              {this.renderSubmitButton()}\n            </div>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = ({ wallet }) => ({\n  coins: wallet.currencies,\n  isEditing: wallet.isEditing,\n  curExpenditure: wallet.curExpenditure,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setExpenditure: (expenditure) => dispatch(setExpenditureAction(expenditure)),\n  editExpenditure: (expenditure) => dispatch(editExpenditureAction(expenditure)),\n});\n\nExpenditureForm.propTypes = {\n  coins: PropTypes.arrayOf(PropTypes.string).isRequired,\n  isEditing: PropTypes.bool,\n  curExpenditure: PropTypes.objectOf(PropTypes.any),\n  setExpenditure: PropTypes.func.isRequired,\n  editExpenditure: PropTypes.func.isRequired,\n};\n\nExpenditureForm.defaultProps = {\n  isEditing: false,\n  curExpenditure: {},\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenditureForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteExpenditure, setCurExpenditure as setCurExpenseAction } from '../actions';\nimport { PencilAltIcon } from '@heroicons/react/outline'\nimport { TrashIcon } from '@heroicons/react/solid';\n\nclass DeleteAndEditButton extends React.Component {\n  constructor() {\n    super();\n    this.deleteExpense = this.deleteExpense.bind(this);\n    this.editExpense = this.editExpense.bind(this);\n  }\n\n  deleteExpense() {\n    const { id, deleteById } = this.props;\n    deleteById(id);\n  }\n\n  editExpense() {\n    const { id, setCurExpense } = this.props;\n    setCurExpense(id);\n  }\n\n  render() {\n    return (\n      <>\n        <button\n          data-testid=\"delete-btn\"\n          onClick={ this.deleteExpense }\n          className=\"mr-2 whitespace-nowrap inline-flex items-center justify-center px-2 py-1 border border-transparent rounded-md shadow-sm text-base font-medium text-white bg-red-500 hover:bg-red-700\"\n        >\n          <TrashIcon className=\"h-5 w-5\" />\n        </button>\n        <button\n          data-testid=\"edit-btn\"\n          onClick={ this.editExpense }\n          className=\"mr-2 whitespace-nowrap inline-flex items-center justify-center px-2 py-1 border border-transparent rounded-md shadow-sm text-base font-medium text-white bg-yellow-500 hover:bg-yellow-600\"\n        >\n          <PencilAltIcon className=\"h-5 w-5\" />\n        </button>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteById: (id) => dispatch(deleteExpenditure(id)),\n  setCurExpense: (id) => dispatch(setCurExpenseAction(id)),\n});\n\nDeleteAndEditButton.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  deleteById: PropTypes.func.isRequired,\n  setCurExpense: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(DeleteAndEditButton);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport DeleteAndEditButton from './DeleteAndEditButton';\n\nclass ExpenseTable extends React.Component {\n  constructor() {\n    super();\n    this.renderTableRow = this.renderTableRow.bind(this);\n  }\n\n  renderTableRow(expense) {\n    const { id, value, description, currency, method, tag, exchangeRates } = expense;\n    return (\n      <tr key={ id }>\n        <td className=\"sm:px-1 md:px-2 lg:px-3 py-4 whitespace-nowrap\">\n          <div className=\"flex items-center place-content-center\">\n            <div className=\"text-sm font-medium text-gray-900 truncate max-w-xss\">\n              {description || '-'}\n            </div>\n          </div>\n        </td>\n        <td className=\"sm:px-1 md:px-2 lg:px-3 py-4 whitespace-nowrap\">\n          <div className=\"flex items-center place-content-center\">\n            <div className=\"text-sm font-medium text-gray-900\">\n              {tag}\n            </div>\n          </div>\n        </td>\n        <td className=\"sm:px-1 md:px-2 lg:px-3 py-4 whitespace-nowrap\">\n          <div className=\"flex items-center place-content-center\">\n            <div className=\"text-sm font-medium text-gray-900\">\n              {method}\n            </div>\n          </div>\n        </td>\n        <td className=\"sm:px-1 md:px-2 lg:px-3 py-4 whitespace-nowrap\">\n          <div className=\"flex items-center place-content-center\">\n            <div className=\"text-sm font-medium text-gray-900\">\n              {`${currency} ${Number(value).toFixed(2)}`}\n            </div>\n          </div>\n        </td>\n        <td className=\"sm:px-1 md:px-2 lg:px-3 py-4 whitespace-nowrap\">\n          <div className=\"flex items-center place-content-center\">\n            <div className=\"text-sm font-medium text-gray-900\">\n              { exchangeRates[currency].name.replace('/Real Brasileiro', '') }\n            </div>\n          </div>\n        </td>\n        <td className=\"sm:px-1 md:px-2 lg:px-3 py-4 whitespace-nowrap\">\n          <div className=\"flex items-center place-content-center\">\n            <div className=\"text-sm font-medium text-gray-900\">\n              {Number(exchangeRates[currency].ask).toFixed(2)}\n            </div>\n          </div>\n        </td>\n        <td className=\"sm:px-1 md:px-2 lg:px-3 py-4 whitespace-nowrap\">\n          <div className=\"flex items-center place-content-center\">\n            <div className=\"text-sm font-medium text-gray-900\">\n              {(Number(exchangeRates[currency].ask) * Number(value)).toFixed(2)}\n            </div>\n          </div>\n        </td>\n        <td className=\"sm:px-1 md:px-2 lg:px-3 py-4 whitespace-nowrap\">\n          <div className=\"flex items-center place-content-center\">\n            <div className=\"text-sm font-medium text-gray-900\">\n              Real\n            </div>\n          </div>\n        </td>\n        <td className=\"sm:px-1 md:px-2 lg:px-3 py-4 whitespace-nowrap\">\n          <div className=\"flex items-center place-content-center\">\n            <div className=\"text-sm font-medium text-gray-900\">\n              <DeleteAndEditButton id={id} />\n            </div>\n          </div>\n        </td>\n      </tr>\n    );\n  }\n\n  render() {\n    const { expenses } = this.props;\n    return (\n      <div className=\"flex flex-col mt-10\">\n        <div className=\"-my-2 overflow-x-auto\">\n          <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n            <div className=\"shadow overflow-hidden border-b border-t border-gray-300 sm:rounded-lg\">\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead className=\"bg-gray-50\">\n                  <tr>\n                    <th className=\"sm:px-1 md:px-2 lg:px-3 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">Descrição</th>\n                    <th className=\"sm:px-1 md:px-2 lg:px-3 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">Tag</th>\n                    <th className=\"sm:px-1 md:px-2 lg:px-3 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">Método de pagamento</th>\n                    <th className=\"sm:px-1 md:px-2 lg:px-3 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">Valor</th>\n                    <th className=\"sm:px-1 md:px-2 lg:px-3 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">Moeda</th>\n                    <th className=\"sm:px-1 md:px-2 lg:px-3 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">Câmbio utilizado</th>\n                    <th className=\"sm:px-1 md:px-2 lg:px-3 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">Valor convertido</th>\n                    <th className=\"sm:px-1 md:px-2 lg:px-3 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">Moeda de conversão</th>\n                    <th className=\"sm:px-1 md:px-2 lg:px-3 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">Editar/Excluir</th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {expenses.map(this.renderTableRow)}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n});\n\nExpenseTable.propTypes = {\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default connect(mapStateToProps)(ExpenseTable);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport ExpenditureForm from '../components/ExpenditureForm';\nimport ExpenseTable from '../components/ExpenseTable';\nimport { fetchCoins } from '../actions';\n\nclass Wallet extends React.Component {\n  componentDidMount() {\n    const { getCoins } = this.props;\n    getCoins();\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <ExpenditureForm />\n        <ExpenseTable />\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  getCoins: () => dispatch(fetchCoins()),\n});\n\nWallet.propTypes = {\n  getCoins: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Wallet);\n","// class teste extends React.Component {\n//   render () {\n//     return ();\n//   }\n// }\n\n// export default teste;\n\n/* This example requires Tailwind CSS v2.0+ */\nimport React from \"react\"\n\n\n/*\n  This example requires Tailwind CSS v2.0+ \n  \n  This example requires some changes to your config:\n  \n  ```\n  // tailwind.config.js\n  module.exports = {\n    // ...\n    theme: {\n      extend: {\n        gridTemplateRows: {\n          '[auto,auto,1fr]': 'auto auto 1fr',\n        },\n      },\n    },\n    plugins: [\n      // ...\n      require('@tailwindcss/aspect-ratio'),\n    ],\n  }\n  ```\n*/\nimport { useState } from 'react'\nimport { StarIcon } from '@heroicons/react/solid'\nimport { RadioGroup } from '@headlessui/react'\n\nconst product = {\n  name: 'Basic Tee 6-Pack',\n  price: '$192',\n  href: '#',\n  breadcrumbs: [\n    { id: 1, name: 'Men', href: '#' },\n    { id: 2, name: 'Clothing', href: '#' },\n  ],\n  images: [\n    {\n      src: 'https://tailwindui.com/img/ecommerce-images/product-page-02-secondary-product-shot.jpg',\n      alt: 'Two each of gray, white, and black shirts laying flat.',\n    },\n    {\n      src: 'https://tailwindui.com/img/ecommerce-images/product-page-02-tertiary-product-shot-01.jpg',\n      alt: 'Model wearing plain black basic tee.',\n    },\n    {\n      src: 'https://tailwindui.com/img/ecommerce-images/product-page-02-tertiary-product-shot-02.jpg',\n      alt: 'Model wearing plain gray basic tee.',\n    },\n    {\n      src: 'https://tailwindui.com/img/ecommerce-images/product-page-02-featured-product-shot.jpg',\n      alt: 'Model wearing plain white basic tee.',\n    },\n  ],\n  colors: [\n    { name: 'White', class: 'bg-white', selectedClass: 'ring-gray-400' },\n    { name: 'Gray', class: 'bg-gray-200', selectedClass: 'ring-gray-400' },\n    { name: 'Black', class: 'bg-gray-900', selectedClass: 'ring-gray-900' },\n  ],\n  sizes: [\n    { name: 'XXS', inStock: false },\n    { name: 'XS', inStock: true },\n    { name: 'S', inStock: true },\n    { name: 'M', inStock: true },\n    { name: 'L', inStock: true },\n    { name: 'XL', inStock: true },\n    { name: '2XL', inStock: true },\n    { name: '3XL', inStock: true },\n  ],\n  description:\n    'The Basic Tee 6-Pack allows you to fully express your vibrant personality with three grayscale options. Feeling adventurous? Put on a heather gray tee. Want to be a trendsetter? Try our exclusive colorway: \"Black\". Need to add an extra pop of color to your outfit? Our white tee has you covered.',\n  highlights: [\n    'Hand cut and sewn locally',\n    'Dyed with our proprietary colors',\n    'Pre-washed & pre-shrunk',\n    'Ultra-soft 100% cotton',\n  ],\n  details:\n    'The 6-Pack includes two black, two white, and two heather gray Basic Tees. Sign up for our subscription service and be the first to get new, exciting colors, like our upcoming \"Charcoal Gray\" limited release.',\n}\nconst reviews = { href: '#', average: 4, totalCount: 117 }\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport function Example() {\n  const [selectedColor, setSelectedColor] = useState(product.colors[0])\n  const [selectedSize, setSelectedSize] = useState(product.sizes[2])\n\n  return (\n    <div className=\"bg-white\">\n      <div className=\"pt-6\">\n        <nav aria-label=\"Breadcrumb\">\n          <ol role=\"list\" className=\"max-w-2xl mx-auto px-4 flex items-center space-x-2 sm:px-6 lg:max-w-7xl lg:px-8\">\n            {product.breadcrumbs.map((breadcrumb) => (\n              <li key={breadcrumb.id}>\n                <div className=\"flex items-center\">\n                  <a href={breadcrumb.href} className=\"mr-2 text-sm font-medium text-gray-900\">\n                    {breadcrumb.name}\n                  </a>\n                  <svg\n                    width={16}\n                    height={20}\n                    viewBox=\"0 0 16 20\"\n                    fill=\"currentColor\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    aria-hidden=\"true\"\n                    className=\"w-4 h-5 text-gray-300\"\n                  >\n                    <path d=\"M5.697 4.34L8.98 16.532h1.327L7.025 4.341H5.697z\" />\n                  </svg>\n                </div>\n              </li>\n            ))}\n            <li className=\"text-sm\">\n              <a href={product.href} aria-current=\"page\" className=\"font-medium text-gray-500 hover:text-gray-600\">\n                {product.name}\n              </a>\n            </li>\n          </ol>\n        </nav>\n\n        {/* Image gallery */}\n        <div className=\"mt-6 max-w-2xl mx-auto sm:px-6 lg:max-w-7xl lg:px-8 lg:grid lg:grid-cols-3 lg:gap-x-8\">\n          <div className=\"hidden aspect-w-3 aspect-h-4 rounded-lg overflow-hidden lg:block\">\n            <img\n              src={product.images[0].src}\n              alt={product.images[0].alt}\n              className=\"w-full h-full object-center object-cover\"\n            />\n          </div>\n          <div className=\"hidden lg:grid lg:grid-cols-1 lg:gap-y-8\">\n            <div className=\"aspect-w-3 aspect-h-2 rounded-lg overflow-hidden\">\n              <img\n                src={product.images[1].src}\n                alt={product.images[1].alt}\n                className=\"w-full h-full object-center object-cover\"\n              />\n            </div>\n            <div className=\"aspect-w-3 aspect-h-2 rounded-lg overflow-hidden\">\n              <img\n                src={product.images[2].src}\n                alt={product.images[2].alt}\n                className=\"w-full h-full object-center object-cover\"\n              />\n            </div>\n          </div>\n          <div className=\"aspect-w-4 aspect-h-5 sm:rounded-lg sm:overflow-hidden lg:aspect-w-3 lg:aspect-h-4\">\n            <img\n              src={product.images[3].src}\n              alt={product.images[3].alt}\n              className=\"w-full h-full object-center object-cover\"\n            />\n          </div>\n        </div>\n\n        {/* Product info */}\n        <div className=\"max-w-2xl mx-auto pt-10 pb-16 px-4 sm:px-6 lg:max-w-7xl lg:pt-16 lg:pb-24 lg:px-8 lg:grid lg:grid-cols-3 lg:grid-rows-[auto,auto,1fr] lg:gap-x-8\">\n          <div className=\"lg:col-span-2 lg:border-r lg:border-gray-200 lg:pr-8\">\n            <h1 className=\"text-2xl font-extrabold tracking-tight text-gray-900 sm:text-3xl\">{product.name}</h1>\n          </div>\n\n          {/* Options */}\n          <div className=\"mt-4 lg:mt-0 lg:row-span-3\">\n            <h2 className=\"sr-only\">Product information</h2>\n            <p className=\"text-3xl text-gray-900\">{product.price}</p>\n\n            {/* Reviews */}\n            <div className=\"mt-6\">\n              <h3 className=\"sr-only\">Reviews</h3>\n              <div className=\"flex items-center\">\n                <div className=\"flex items-center\">\n                  {[0, 1, 2, 3, 4].map((rating) => (\n                    <StarIcon\n                      key={rating}\n                      className={classNames(\n                        reviews.average > rating ? 'text-gray-900' : 'text-gray-200',\n                        'h-5 w-5 flex-shrink-0'\n                      )}\n                      aria-hidden=\"true\"\n                    />\n                  ))}\n                </div>\n                <p className=\"sr-only\">{reviews.average} out of 5 stars</p>\n                <a href={reviews.href} className=\"ml-3 text-sm font-medium text-indigo-600 hover:text-indigo-500\">\n                  {reviews.totalCount} reviews\n                </a>\n              </div>\n            </div>\n\n            <form className=\"mt-10\">\n              {/* Colors */}\n              <div>\n                <h3 className=\"text-sm text-gray-900 font-medium\">Color</h3>\n\n                <RadioGroup value={selectedColor} onChange={setSelectedColor} className=\"mt-4\">\n                  <RadioGroup.Label className=\"sr-only\">Choose a color</RadioGroup.Label>\n                  <div className=\"flex items-center space-x-3\">\n                    {product.colors.map((color) => (\n                      <RadioGroup.Option\n                        key={color.name}\n                        value={color}\n                        className={({ active, checked }) =>\n                          classNames(\n                            color.selectedClass,\n                            active && checked ? 'ring ring-offset-1' : '',\n                            !active && checked ? 'ring-2' : '',\n                            '-m-0.5 relative p-0.5 rounded-full flex items-center justify-center cursor-pointer focus:outline-none'\n                          )\n                        }\n                      >\n                        <RadioGroup.Label as=\"p\" className=\"sr-only\">\n                          {color.name}\n                        </RadioGroup.Label>\n                        <span\n                          aria-hidden=\"true\"\n                          className={classNames(\n                            color.class,\n                            'h-8 w-8 border border-black border-opacity-10 rounded-full'\n                          )}\n                        />\n                      </RadioGroup.Option>\n                    ))}\n                  </div>\n                </RadioGroup>\n              </div>\n\n              {/* Sizes */}\n              <div className=\"mt-10\">\n                <div className=\"flex items-center justify-between\">\n                  <h3 className=\"text-sm text-gray-900 font-medium\">Size</h3>\n                  <a href=\"#\" className=\"text-sm font-medium text-indigo-600 hover:text-indigo-500\">\n                    Size guide\n                  </a>\n                </div>\n\n                <RadioGroup value={selectedSize} onChange={setSelectedSize} className=\"mt-4\">\n                  <RadioGroup.Label className=\"sr-only\">Choose a size</RadioGroup.Label>\n                  <div className=\"grid grid-cols-4 gap-4 sm:grid-cols-8 lg:grid-cols-4\">\n                    {product.sizes.map((size) => (\n                      <RadioGroup.Option\n                        key={size.name}\n                        value={size}\n                        disabled={!size.inStock}\n                        className={({ active }) =>\n                          classNames(\n                            size.inStock\n                              ? 'bg-white shadow-sm text-gray-900 cursor-pointer'\n                              : 'bg-gray-50 text-gray-200 cursor-not-allowed',\n                            active ? 'ring-2 ring-indigo-500' : '',\n                            'group relative border rounded-md py-3 px-4 flex items-center justify-center text-sm font-medium uppercase hover:bg-gray-50 focus:outline-none sm:flex-1 sm:py-6'\n                          )\n                        }\n                      >\n                        {({ active, checked }) => (\n                          <>\n                            <RadioGroup.Label as=\"p\">{size.name}</RadioGroup.Label>\n                            {size.inStock ? (\n                              <div\n                                className={classNames(\n                                  active ? 'border' : 'border-2',\n                                  checked ? 'border-indigo-500' : 'border-transparent',\n                                  'absolute -inset-px rounded-md pointer-events-none'\n                                )}\n                                aria-hidden=\"true\"\n                              />\n                            ) : (\n                              <div\n                                aria-hidden=\"true\"\n                                className=\"absolute -inset-px rounded-md border-2 border-gray-200 pointer-events-none\"\n                              >\n                                <svg\n                                  className=\"absolute inset-0 w-full h-full text-gray-200 stroke-2\"\n                                  viewBox=\"0 0 100 100\"\n                                  preserveAspectRatio=\"none\"\n                                  stroke=\"currentColor\"\n                                >\n                                  <line x1={0} y1={100} x2={100} y2={0} vectorEffect=\"non-scaling-stroke\" />\n                                </svg>\n                              </div>\n                            )}\n                          </>\n                        )}\n                      </RadioGroup.Option>\n                    ))}\n                  </div>\n                </RadioGroup>\n              </div>\n\n              <button\n                type=\"submit\"\n                className=\"mt-10 w-full bg-indigo-600 border border-transparent rounded-md py-3 px-8 flex items-center justify-center text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n              >\n                Add to bag\n              </button>\n            </form>\n          </div>\n\n          <div className=\"py-10 lg:pt-6 lg:pb-16 lg:col-start-1 lg:col-span-2 lg:border-r lg:border-gray-200 lg:pr-8\">\n            {/* Description and details */}\n            <div>\n              <h3 className=\"sr-only\">Description</h3>\n\n              <div className=\"space-y-6\">\n                <p className=\"text-base text-gray-900\">{product.description}</p>\n              </div>\n            </div>\n\n            <div className=\"mt-10\">\n              <h3 className=\"text-sm font-medium text-gray-900\">Highlights</h3>\n\n              <div className=\"mt-4\">\n                <ul role=\"list\" className=\"pl-4 list-disc text-sm space-y-2\">\n                  {product.highlights.map((highlight) => (\n                    <li key={highlight} className=\"text-gray-400\">\n                      <span className=\"text-gray-600\">{highlight}</span>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n\n            <div className=\"mt-10\">\n              <h2 className=\"text-sm font-medium text-gray-900\">Details</h2>\n\n              <div className=\"mt-4 space-y-6\">\n                <p className=\"text-sm text-gray-600\">{product.details}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { LockClosedIcon } from '@heroicons/react/solid'\n\nexport function Exaample() {\n  return (\n    <>\n      {/*\n        This example requires updating your template:\n\n        ```\n        <html class=\"h-full bg-gray-50\">\n        <body class=\"h-full\">\n        ```\n      */}\n      <div className=\"min-h-full flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-md w-full space-y-8\">\n          <div>\n            <img\n              className=\"mx-auto h-12 w-auto\"\n              src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\n              alt=\"Workflow\"\n            />\n            <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Sign in to your account</h2>\n            <p className=\"mt-2 text-center text-sm text-gray-600\">\n              Or{' '}\n              <a href=\"#\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\n                start your 14-day free trial\n              </a>\n            </p>\n          </div>\n          <form className=\"mt-8 space-y-6\" action=\"#\" method=\"POST\">\n            <input type=\"hidden\" name=\"remember\" defaultValue=\"true\" />\n            <div className=\"rounded-md shadow-sm -space-y-px\">\n              <div>\n                <label htmlFor=\"email-address\" className=\"sr-only\">\n                  Email address\n                </label>\n                <input\n                  id=\"email-address\"\n                  name=\"email\"\n                  type=\"email\"\n                  autoComplete=\"email\"\n                  required\n                  className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                  placeholder=\"Email address\"\n                />\n              </div>\n              <div>\n                <label htmlFor=\"password\" className=\"sr-only\">\n                  Password\n                </label>\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  autoComplete=\"current-password\"\n                  required\n                  className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                  placeholder=\"Password\"\n                />\n              </div>\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <input\n                  id=\"remember-me\"\n                  name=\"remember-me\"\n                  type=\"checkbox\"\n                  className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n                />\n                <label htmlFor=\"remember-me\" className=\"ml-2 block text-sm text-gray-900\">\n                  Remember me\n                </label>\n              </div>\n\n              <div className=\"text-sm\">\n                <a href=\"#\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\n                  Forgot your password?\n                </a>\n              </div>\n            </div>\n\n            <div>\n              <button\n                type=\"submit\"\n                className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n              >\n                <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\">\n                  <LockClosedIcon className=\"h-5 w-5 text-indigo-500 group-hover:text-indigo-400\" aria-hidden=\"true\" />\n                </span>\n                Sign in\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </>\n  )\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment } from 'react'\nimport { Popover, Transition } from '@headlessui/react'\nimport {\n  BookmarkAltIcon,\n  CalendarIcon,\n  ChartBarIcon,\n  CursorClickIcon,\n  MenuIcon,\n  PhoneIcon,\n  PlayIcon,\n  RefreshIcon,\n  ShieldCheckIcon,\n  SupportIcon,\n  ViewGridIcon,\n  XIcon,\n} from '@heroicons/react/outline'\nimport { ChevronDownIcon } from '@heroicons/react/solid'\n\nconst solutions = [\n  {\n    name: 'Analytics',\n    description: 'Get a better understanding of where your traffic is coming from.',\n    href: '#',\n    icon: ChartBarIcon,\n  },\n  {\n    name: 'Engagement',\n    description: 'Speak directly to your customers in a more meaningful way.',\n    href: '#',\n    icon: CursorClickIcon,\n  },\n  { name: 'Security', description: \"Your customers' data will be safe and secure.\", href: '#', icon: ShieldCheckIcon },\n  {\n    name: 'Integrations',\n    description: \"Connect with third-party tools that you're already using.\",\n    href: '#',\n    icon: ViewGridIcon,\n  },\n  {\n    name: 'Automations',\n    description: 'Build strategic funnels that will drive your customers to convert',\n    href: '#',\n    icon: RefreshIcon,\n  },\n]\nconst callsToAction = [\n  { name: 'Watch Demo', href: '#', icon: PlayIcon },\n  { name: 'Contact Sales', href: '#', icon: PhoneIcon },\n]\nconst resources = [\n  {\n    name: 'Help Center',\n    description: 'Get all of your questions answered in our forums or contact support.',\n    href: '#',\n    icon: SupportIcon,\n  },\n  {\n    name: 'Guides',\n    description: 'Learn how to maximize our platform to get the most out of it.',\n    href: '#',\n    icon: BookmarkAltIcon,\n  },\n  {\n    name: 'Events',\n    description: 'See what meet-ups and other events we might be planning near you.',\n    href: '#',\n    icon: CalendarIcon,\n  },\n  { name: 'Security', description: 'Understand how we take your privacy seriously.', href: '#', icon: ShieldCheckIcon },\n]\nconst recentPosts = [\n  { id: 1, name: 'Boost your conversion rate', href: '#' },\n  { id: 2, name: 'How to use search engine optimization to drive traffic to your site', href: '#' },\n  { id: 3, name: 'Improve your customer experience', href: '#' },\n]\n\nfunction classNamess(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport function Exampleeeee() {\n  return (\n    <Popover className=\"relative bg-white\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6\">\n        <div className=\"flex justify-between items-center border-b-2 border-gray-100 py-6 md:justify-start md:space-x-10\">\n          <div className=\"flex justify-start lg:w-0 lg:flex-1\">\n            <a href=\"#\">\n              <span className=\"sr-only\">Workflow</span>\n              <img\n                className=\"h-8 w-auto sm:h-10\"\n                src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\n                alt=\"\"\n              />\n            </a>\n          </div>\n          <div className=\"-mr-2 -my-2 md:hidden\">\n            <Popover.Button className=\"bg-white rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\">\n              <span className=\"sr-only\">Open menu</span>\n              <MenuIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n            </Popover.Button>\n          </div>\n          <Popover.Group as=\"nav\" className=\"hidden md:flex space-x-10\">\n            <Popover className=\"relative\">\n              {({ open }) => (\n                <>\n                  <Popover.Button\n                    className={classNamess(\n                      open ? 'text-gray-900' : 'text-gray-500',\n                      'group bg-white rounded-md inline-flex items-center text-base font-medium hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'\n                    )}\n                  >\n                    <span>Solutions</span>\n                    <ChevronDownIcon\n                      className={classNamess(\n                        open ? 'text-gray-600' : 'text-gray-400',\n                        'ml-2 h-5 w-5 group-hover:text-gray-500'\n                      )}\n                      aria-hidden=\"true\"\n                    />\n                  </Popover.Button>\n\n                  <Transition\n                    as={Fragment}\n                    enter=\"transition ease-out duration-200\"\n                    enterFrom=\"opacity-0 translate-y-1\"\n                    enterTo=\"opacity-100 translate-y-0\"\n                    leave=\"transition ease-in duration-150\"\n                    leaveFrom=\"opacity-100 translate-y-0\"\n                    leaveTo=\"opacity-0 translate-y-1\"\n                  >\n                    <Popover.Panel className=\"absolute z-10 -ml-4 mt-3 transform px-2 w-screen max-w-md sm:px-0 lg:ml-0 lg:left-1/2 lg:-translate-x-1/2\">\n                      <div className=\"rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 overflow-hidden\">\n                        <div className=\"relative grid gap-6 bg-white px-5 py-6 sm:gap-8 sm:p-8\">\n                          {solutions.map((item) => (\n                            <a\n                              key={item.name}\n                              href={item.href}\n                              className=\"-m-3 p-3 flex items-start rounded-lg hover:bg-gray-50\"\n                            >\n                              <item.icon className=\"flex-shrink-0 h-6 w-6 text-indigo-600\" aria-hidden=\"true\" />\n                              <div className=\"ml-4\">\n                                <p className=\"text-base font-medium text-gray-900\">{item.name}</p>\n                                <p className=\"mt-1 text-sm text-gray-500\">{item.description}</p>\n                              </div>\n                            </a>\n                          ))}\n                        </div>\n                        <div className=\"px-5 py-5 bg-gray-50 space-y-6 sm:flex sm:space-y-0 sm:space-x-10 sm:px-8\">\n                          {callsToAction.map((item) => (\n                            <div key={item.name} className=\"flow-root\">\n                              <a\n                                href={item.href}\n                                className=\"-m-3 p-3 flex items-center rounded-md text-base font-medium text-gray-900 hover:bg-gray-100\"\n                              >\n                                <item.icon className=\"flex-shrink-0 h-6 w-6 text-gray-400\" aria-hidden=\"true\" />\n                                <span className=\"ml-3\">{item.name}</span>\n                              </a>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    </Popover.Panel>\n                  </Transition>\n                </>\n              )}\n            </Popover>\n\n            <a href=\"#\" className=\"text-base font-medium text-gray-500 hover:text-gray-900\">\n              Pricing\n            </a>\n            <a href=\"#\" className=\"text-base font-medium text-gray-500 hover:text-gray-900\">\n              Docs\n            </a>\n\n            <Popover className=\"relative\">\n              {({ open }) => (\n                <>\n                  <Popover.Button\n                    className={classNamess(\n                      open ? 'text-gray-900' : 'text-gray-500',\n                      'group bg-white rounded-md inline-flex items-center text-base font-medium hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'\n                    )}\n                  >\n                    <span>More</span>\n                    <ChevronDownIcon\n                      className={classNamess(\n                        open ? 'text-gray-600' : 'text-gray-400',\n                        'ml-2 h-5 w-5 group-hover:text-gray-500'\n                      )}\n                      aria-hidden=\"true\"\n                    />\n                  </Popover.Button>\n\n                  <Transition\n                    as={Fragment}\n                    enter=\"transition ease-out duration-200\"\n                    enterFrom=\"opacity-0 translate-y-1\"\n                    enterTo=\"opacity-100 translate-y-0\"\n                    leave=\"transition ease-in duration-150\"\n                    leaveFrom=\"opacity-100 translate-y-0\"\n                    leaveTo=\"opacity-0 translate-y-1\"\n                  >\n                    <Popover.Panel className=\"absolute z-10 left-1/2 transform -translate-x-1/2 mt-3 px-2 w-screen max-w-md sm:px-0\">\n                      <div className=\"rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 overflow-hidden\">\n                        <div className=\"relative grid gap-6 bg-white px-5 py-6 sm:gap-8 sm:p-8\">\n                          {resources.map((item) => (\n                            <a\n                              key={item.name}\n                              href={item.href}\n                              className=\"-m-3 p-3 flex items-start rounded-lg hover:bg-gray-50\"\n                            >\n                              <item.icon className=\"flex-shrink-0 h-6 w-6 text-indigo-600\" aria-hidden=\"true\" />\n                              <div className=\"ml-4\">\n                                <p className=\"text-base font-medium text-gray-900\">{item.name}</p>\n                                <p className=\"mt-1 text-sm text-gray-500\">{item.description}</p>\n                              </div>\n                            </a>\n                          ))}\n                        </div>\n                        <div className=\"px-5 py-5 bg-gray-50 sm:px-8 sm:py-8\">\n                          <div>\n                            <h3 className=\"text-sm tracking-wide font-medium text-gray-500 uppercase\">Recent Posts</h3>\n                            <ul role=\"list\" className=\"mt-4 space-y-4\">\n                              {recentPosts.map((post) => (\n                                <li key={post.id} className=\"text-base truncate\">\n                                  <a href={post.href} className=\"font-medium text-gray-900 hover:text-gray-700\">\n                                    {post.name}\n                                  </a>\n                                </li>\n                              ))}\n                            </ul>\n                          </div>\n                          <div className=\"mt-5 text-sm\">\n                            <a href=\"#\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\n                              {' '}\n                              View all posts <span aria-hidden=\"true\">&rarr;</span>\n                            </a>\n                          </div>\n                        </div>\n                      </div>\n                    </Popover.Panel>\n                  </Transition>\n                </>\n              )}\n            </Popover>\n          </Popover.Group>\n          <div className=\"hidden md:flex items-center justify-end md:flex-1 lg:w-0\">\n            <a href=\"#\" className=\"whitespace-nowrap text-base font-medium text-gray-500 hover:text-gray-900\">\n              Sign in\n            </a>\n            <a\n              href=\"#\"\n              className=\"ml-8 whitespace-nowrap inline-flex items-center justify-center px-4 py-2 border border-transparent rounded-md shadow-sm text-base font-medium text-white bg-indigo-600 hover:bg-indigo-700\"\n            >\n              Sign up\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <Transition\n        as={Fragment}\n        enter=\"duration-200 ease-out\"\n        enterFrom=\"opacity-0 scale-95\"\n        enterTo=\"opacity-100 scale-100\"\n        leave=\"duration-100 ease-in\"\n        leaveFrom=\"opacity-100 scale-100\"\n        leaveTo=\"opacity-0 scale-95\"\n      >\n        <Popover.Panel focus className=\"absolute top-0 inset-x-0 p-2 transition transform origin-top-right md:hidden\">\n          <div className=\"rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 bg-white divide-y-2 divide-gray-50\">\n            <div className=\"pt-5 pb-6 px-5\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <img\n                    className=\"h-8 w-auto\"\n                    src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\n                    alt=\"Workflow\"\n                  />\n                </div>\n                <div className=\"-mr-2\">\n                  <Popover.Button className=\"bg-white rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\">\n                    <span className=\"sr-only\">Close menu</span>\n                    <XIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                  </Popover.Button>\n                </div>\n              </div>\n              <div className=\"mt-6\">\n                <nav className=\"grid gap-y-8\">\n                  {solutions.map((item) => (\n                    <a\n                      key={item.name}\n                      href={item.href}\n                      className=\"-m-3 p-3 flex items-center rounded-md hover:bg-gray-50\"\n                    >\n                      <item.icon className=\"flex-shrink-0 h-6 w-6 text-indigo-600\" aria-hidden=\"true\" />\n                      <span className=\"ml-3 text-base font-medium text-gray-900\">{item.name}</span>\n                    </a>\n                  ))}\n                </nav>\n              </div>\n            </div>\n            <div className=\"py-6 px-5 space-y-6\">\n              <div className=\"grid grid-cols-2 gap-y-4 gap-x-8\">\n                <a href=\"#\" className=\"text-base font-medium text-gray-900 hover:text-gray-700\">\n                  Pricing\n                </a>\n\n                <a href=\"#\" className=\"text-base font-medium text-gray-900 hover:text-gray-700\">\n                  Docs\n                </a>\n                {resources.map((item) => (\n                  <a\n                    key={item.name}\n                    href={item.href}\n                    className=\"text-base font-medium text-gray-900 hover:text-gray-700\"\n                  >\n                    {item.name}\n                  </a>\n                ))}\n              </div>\n              <div>\n                <a\n                  href=\"#\"\n                  className=\"w-full flex items-center justify-center px-4 py-2 border border-transparent rounded-md shadow-sm text-base font-medium text-white bg-indigo-600 hover:bg-indigo-700\"\n                >\n                  Sign up\n                </a>\n                <p className=\"mt-6 text-center text-base font-medium text-gray-500\">\n                  Existing customer?{' '}\n                  <a href=\"#\" className=\"text-indigo-600 hover:text-indigo-500\">\n                    Sign in\n                  </a>\n                </p>\n              </div>\n            </div>\n          </div>\n        </Popover.Panel>\n      </Transition>\n    </Popover>\n  )\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\n  This example requires Tailwind CSS v2.0+ \n  \n  This example requires some changes to your config:\n  \n  ```\n  // tailwind.config.js\n  module.exports = {\n    // ...\n    plugins: [\n      // ...\n      require('@tailwindcss/forms'),\n    ],\n  }\n  ```\n*/\nexport function Exaaaaample() {\n  return (\n    <>\n      <div>\n        <div className=\"md:grid md:grid-cols-3 md:gap-6\">\n          <div className=\"md:col-span-1\">\n            <div className=\"px-4 sm:px-0\">\n              <h3 className=\"text-lg font-medium leading-6 text-gray-900\">Profile</h3>\n              <p className=\"mt-1 text-sm text-gray-600\">\n                This information will be displayed publicly so be careful what you share.\n              </p>\n            </div>\n          </div>\n          <div className=\"mt-5 md:mt-0 md:col-span-2\">\n            <form action=\"#\" method=\"POST\">\n              <div className=\"shadow sm:rounded-md sm:overflow-hidden\">\n                <div className=\"px-4 py-5 bg-white space-y-6 sm:p-6\">\n                  <div className=\"grid grid-cols-3 gap-6\">\n                    <div className=\"col-span-3 sm:col-span-2\">\n                      <label htmlFor=\"company-website\" className=\"block text-sm font-medium text-gray-700\">\n                        Website\n                      </label>\n                      <div className=\"mt-1 flex rounded-md shadow-sm\">\n                        <span className=\"inline-flex items-center px-3 rounded-l-md border border-r-0 border-gray-300 bg-gray-50 text-gray-500 text-sm\">\n                          http://\n                        </span>\n                        <input\n                          type=\"text\"\n                          name=\"company-website\"\n                          id=\"company-website\"\n                          className=\"focus:ring-indigo-500 focus:border-indigo-500 flex-1 block w-full rounded-none rounded-r-md sm:text-sm border-gray-300\"\n                          placeholder=\"www.example.com\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"about\" className=\"block text-sm font-medium text-gray-700\">\n                      About\n                    </label>\n                    <div className=\"mt-1\">\n                      <textarea\n                        id=\"about\"\n                        name=\"about\"\n                        rows={3}\n                        className=\"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 mt-1 block w-full sm:text-sm border border-gray-300 rounded-md\"\n                        placeholder=\"you@example.com\"\n                        defaultValue={''}\n                      />\n                    </div>\n                    <p className=\"mt-2 text-sm text-gray-500\">\n                      Brief description for your profile. URLs are hyperlinked.\n                    </p>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">Photo</label>\n                    <div className=\"mt-1 flex items-center\">\n                      <span className=\"inline-block h-12 w-12 rounded-full overflow-hidden bg-gray-100\">\n                        <svg className=\"h-full w-full text-gray-300\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path d=\"M24 20.993V24H0v-2.996A14.977 14.977 0 0112.004 15c4.904 0 9.26 2.354 11.996 5.993zM16.002 8.999a4 4 0 11-8 0 4 4 0 018 0z\" />\n                        </svg>\n                      </span>\n                      <button\n                        type=\"button\"\n                        className=\"ml-5 bg-white py-2 px-3 border border-gray-300 rounded-md shadow-sm text-sm leading-4 font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                      >\n                        Change\n                      </button>\n                    </div>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">Cover photo</label>\n                    <div className=\"mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md\">\n                      <div className=\"space-y-1 text-center\">\n                        <svg\n                          className=\"mx-auto h-12 w-12 text-gray-400\"\n                          stroke=\"currentColor\"\n                          fill=\"none\"\n                          viewBox=\"0 0 48 48\"\n                          aria-hidden=\"true\"\n                        >\n                          <path\n                            d=\"M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02\"\n                            strokeWidth={2}\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                          />\n                        </svg>\n                        <div className=\"flex text-sm text-gray-600\">\n                          <label\n                            htmlFor=\"file-upload\"\n                            className=\"relative cursor-pointer bg-white rounded-md font-medium text-indigo-600 hover:text-indigo-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-indigo-500\"\n                          >\n                            <span>Upload a file</span>\n                            <input id=\"file-upload\" name=\"file-upload\" type=\"file\" className=\"sr-only\" />\n                          </label>\n                          <p className=\"pl-1\">or drag and drop</p>\n                        </div>\n                        <p className=\"text-xs text-gray-500\">PNG, JPG, GIF up to 10MB</p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"px-4 py-3 bg-gray-50 text-right sm:px-6\">\n                  <button\n                    type=\"submit\"\n                    className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                  >\n                    Save\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"hidden sm:block\" aria-hidden=\"true\">\n        <div className=\"py-5\">\n          <div className=\"border-t border-gray-200\" />\n        </div>\n      </div>\n\n      <div className=\"mt-10 sm:mt-0\">\n        <div className=\"md:grid md:grid-cols-3 md:gap-6\">\n          <div className=\"md:col-span-1\">\n            <div className=\"px-4 sm:px-0\">\n              <h3 className=\"text-lg font-medium leading-6 text-gray-900\">Personal Information</h3>\n              <p className=\"mt-1 text-sm text-gray-600\">Use a permanent address where you can receive mail.</p>\n            </div>\n          </div>\n          <div className=\"mt-5 md:mt-0 md:col-span-2\">\n            <form action=\"#\" method=\"POST\">\n              <div className=\"shadow overflow-hidden sm:rounded-md\">\n                <div className=\"px-4 py-5 bg-white sm:p-6\">\n                  <div className=\"grid grid-cols-6 gap-6\">\n                    <div className=\"col-span-6 sm:col-span-3\">\n                      <label htmlFor=\"first-name\" className=\"block text-sm font-medium text-gray-700\">\n                        First name\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"first-name\"\n                        id=\"first-name\"\n                        autoComplete=\"given-name\"\n                        className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\n                      />\n                    </div>\n\n                    <div className=\"col-span-6 sm:col-span-3\">\n                      <label htmlFor=\"last-name\" className=\"block text-sm font-medium text-gray-700\">\n                        Last name\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"last-name\"\n                        id=\"last-name\"\n                        autoComplete=\"family-name\"\n                        className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\n                      />\n                    </div>\n\n                    <div className=\"col-span-6 sm:col-span-4\">\n                      <label htmlFor=\"email-address\" className=\"block text-sm font-medium text-gray-700\">\n                        Email address\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"email-address\"\n                        id=\"email-address\"\n                        autoComplete=\"email\"\n                        className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\n                      />\n                    </div>\n\n                    <div className=\"col-span-6 sm:col-span-3\">\n                      <label htmlFor=\"country\" className=\"block text-sm font-medium text-gray-700\">\n                        Country / Region\n                      </label>\n                      <select\n                        id=\"country\"\n                        name=\"country\"\n                        autoComplete=\"country\"\n                        className=\"mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                      >\n                        <option>United States</option>\n                        <option>Canada</option>\n                        <option>Mexico</option>\n                      </select>\n                    </div>\n\n                    <div className=\"col-span-6\">\n                      <label htmlFor=\"street-address\" className=\"block text-sm font-medium text-gray-700\">\n                        Street address\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"street-address\"\n                        id=\"street-address\"\n                        autoComplete=\"street-address\"\n                        className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\n                      />\n                    </div>\n\n                    <div className=\"col-span-6 sm:col-span-6 lg:col-span-2\">\n                      <label htmlFor=\"city\" className=\"block text-sm font-medium text-gray-700\">\n                        City\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"city\"\n                        id=\"city\"\n                        className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\n                      />\n                    </div>\n\n                    <div className=\"col-span-6 sm:col-span-3 lg:col-span-2\">\n                      <label htmlFor=\"state\" className=\"block text-sm font-medium text-gray-700\">\n                        State / Province\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"state\"\n                        id=\"state\"\n                        className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\n                      />\n                    </div>\n\n                    <div className=\"col-span-6 sm:col-span-3 lg:col-span-2\">\n                      <label htmlFor=\"postal-code\" className=\"block text-sm font-medium text-gray-700\">\n                        ZIP / Postal\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"postal-code\"\n                        id=\"postal-code\"\n                        autoComplete=\"postal-code\"\n                        className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"px-4 py-3 bg-gray-50 text-right sm:px-6\">\n                  <button\n                    type=\"submit\"\n                    className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                  >\n                    Save\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"hidden sm:block\" aria-hidden=\"true\">\n        <div className=\"py-5\">\n          <div className=\"border-t border-gray-200\" />\n        </div>\n      </div>\n\n      <div className=\"mt-10 sm:mt-0\">\n        <div className=\"md:grid md:grid-cols-3 md:gap-6\">\n          <div className=\"md:col-span-1\">\n            <div className=\"px-4 sm:px-0\">\n              <h3 className=\"text-lg font-medium leading-6 text-gray-900\">Notifications</h3>\n              <p className=\"mt-1 text-sm text-gray-600\">Decide which communications you'd like to receive and how.</p>\n            </div>\n          </div>\n          <div className=\"mt-5 md:mt-0 md:col-span-2\">\n            <form action=\"#\" method=\"POST\">\n              <div className=\"shadow overflow-hidden sm:rounded-md\">\n                <div className=\"px-4 py-5 bg-white space-y-6 sm:p-6\">\n                  <fieldset>\n                    <legend className=\"text-base font-medium text-gray-900\">By Email</legend>\n                    <div className=\"mt-4 space-y-4\">\n                      <div className=\"flex items-start\">\n                        <div className=\"flex items-center h-5\">\n                          <input\n                            id=\"comments\"\n                            name=\"comments\"\n                            type=\"checkbox\"\n                            className=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\"\n                          />\n                        </div>\n                        <div className=\"ml-3 text-sm\">\n                          <label htmlFor=\"comments\" className=\"font-medium text-gray-700\">\n                            Comments\n                          </label>\n                          <p className=\"text-gray-500\">Get notified when someones posts a comment on a posting.</p>\n                        </div>\n                      </div>\n                      <div className=\"flex items-start\">\n                        <div className=\"flex items-center h-5\">\n                          <input\n                            id=\"candidates\"\n                            name=\"candidates\"\n                            type=\"checkbox\"\n                            className=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\"\n                          />\n                        </div>\n                        <div className=\"ml-3 text-sm\">\n                          <label htmlFor=\"candidates\" className=\"font-medium text-gray-700\">\n                            Candidates\n                          </label>\n                          <p className=\"text-gray-500\">Get notified when a candidate applies for a job.</p>\n                        </div>\n                      </div>\n                      <div className=\"flex items-start\">\n                        <div className=\"flex items-center h-5\">\n                          <input\n                            id=\"offers\"\n                            name=\"offers\"\n                            type=\"checkbox\"\n                            className=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\"\n                          />\n                        </div>\n                        <div className=\"ml-3 text-sm\">\n                          <label htmlFor=\"offers\" className=\"font-medium text-gray-700\">\n                            Offers\n                          </label>\n                          <p className=\"text-gray-500\">Get notified when a candidate accepts or rejects an offer.</p>\n                        </div>\n                      </div>\n                    </div>\n                  </fieldset>\n                  <fieldset>\n                    <div>\n                      <legend className=\"text-base font-medium text-gray-900\">Push Notifications</legend>\n                      <p className=\"text-sm text-gray-500\">These are delivered via SMS to your mobile phone.</p>\n                    </div>\n                    <div className=\"mt-4 space-y-4\">\n                      <div className=\"flex items-center\">\n                        <input\n                          id=\"push-everything\"\n                          name=\"push-notifications\"\n                          type=\"radio\"\n                          className=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300\"\n                        />\n                        <label htmlFor=\"push-everything\" className=\"ml-3 block text-sm font-medium text-gray-700\">\n                          Everything\n                        </label>\n                      </div>\n                      <div className=\"flex items-center\">\n                        <input\n                          id=\"push-email\"\n                          name=\"push-notifications\"\n                          type=\"radio\"\n                          className=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300\"\n                        />\n                        <label htmlFor=\"push-email\" className=\"ml-3 block text-sm font-medium text-gray-700\">\n                          Same as email\n                        </label>\n                      </div>\n                      <div className=\"flex items-center\">\n                        <input\n                          id=\"push-nothing\"\n                          name=\"push-notifications\"\n                          type=\"radio\"\n                          className=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300\"\n                        />\n                        <label htmlFor=\"push-nothing\" className=\"ml-3 block text-sm font-medium text-gray-700\">\n                          No push notifications\n                        </label>\n                      </div>\n                    </div>\n                  </fieldset>\n                </div>\n                <div className=\"px-4 py-3 bg-gray-50 text-right sm:px-6\">\n                  <button\n                    type=\"submit\"\n                    className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                  >\n                    Save\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\n\nexport function slaa() {\n  return (\n  <div class=\"block w-full overflow-x-auto\">\n    <table class=\"items-center bg-transparent w-full border-collapse \">\n      <thead>\n        <tr>\n          <th class=\"px-6 bg-blueGray-50 text-blueGray-500 align-middle border border-solid border-blueGray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left\">\n            Page name\n          </th>\n          <th class=\"px-6 bg-blueGray-50 text-blueGray-500 align-middle border border-solid border-blueGray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left\">\n            Visitors\n          </th>\n          <th class=\"px-6 bg-blueGray-50 text-blueGray-500 align-middle border border-solid border-blueGray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left\">\n            Unique users\n          </th>\n          <th class=\"px-6 bg-blueGray-50 text-blueGray-500 align-middle border border-solid border-blueGray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left\">\n            Bounce rate\n          </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        <tr>\n          <th class=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-left text-blueGray-700 \">\n            /argon/\n          </th>\n          <td class=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 \">\n            4,569\n          </td>\n          <td class=\"border-t-0 px-6 align-center border-l-0 border-r-0 text-xs whitespace-nowrap p-4\">\n            340\n          </td>\n          <td class=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4\">\n            <i class=\"fas fa-arrow-up text-emerald-500 mr-4\"></i>\n            46,53%\n          </td>\n        </tr>\n        <tr>\n          <th class=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-left text-blueGray-700\">\n            /argon/index.html\n          </th>\n          <td class=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4\">\n            3,985\n          </td>\n          <td class=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4\">\n            319\n          </td>\n          <td class=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4\">\n            <i class=\"fas fa-arrow-down text-orange-500 mr-4\"></i>\n            46,53%\n          </td>\n        </tr>\n        <tr>\n          <th class=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-left text-blueGray-700\">\n            /argon/charts.html\n          </th>\n          <td class=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4\">\n            3,513\n          </td>\n          <td class=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4\">\n            294\n          </td>\n          <td class=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4\">\n            <i class=\"fas fa-arrow-down text-orange-500 mr-4\"></i>\n            36,49%\n          </td>\n        </tr>\n        <tr>\n          <th class=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-left text-blueGray-700\">\n            /argon/tables.html\n          </th>\n          <td class=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4\">\n            2,050\n          </td>\n          <td class=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4\">\n            147\n          </td>\n          <td class=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4\">\n            <i class=\"fas fa-arrow-up text-emerald-500 mr-4\"></i>\n            50,87%\n          </td>\n        </tr>\n        <tr>\n          <th class=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-left text-blueGray-700\">\n            /argon/profile.html\n          </th>\n          <td class=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4\">\n            1,795\n          </td>\n          <td class=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4\">\n            190\n          </td>\n          <td class=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4\">\n            <i class=\"fas fa-arrow-down text-red-500 mr-4\"></i>\n            46,53%\n          </td>\n        </tr>\n      </tbody>\n\n    </table>\n  </div>)\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* This example requires Tailwind CSS v2.0+ */\nconst people = [\n  {\n    name: 'Jane Cooper',\n    title: 'Regional Paradigm Technician',\n    department: 'Optimization',\n    role: 'Admin',\n    email: 'jane.cooper@example.com',\n    image:\n      'https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=4&w=256&h=256&q=60',\n  },\n  // More people...\n]\n\nexport default function Exampeeeele() {\n  return (\n    <div className=\"flex flex-col\">\n      <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n        <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n          <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th\n                    scope=\"col\"\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                  >\n                    Name\n                  </th>\n                  <th\n                    scope=\"col\"\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                  >\n                    Title\n                  </th>\n                  <th\n                    scope=\"col\"\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                  >\n                    Status\n                  </th>\n                  <th\n                    scope=\"col\"\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                  >\n                    Role\n                  </th>\n                  <th scope=\"col\" className=\"relative px-6 py-3\">\n                    <span className=\"sr-only\">Edit</span>\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {people.map((person) => (\n                  <tr key={person.email}>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex items-center\">\n                        <div className=\"flex-shrink-0 h-10 w-10\">\n                          <img className=\"h-10 w-10 rounded-full\" src={person.image} alt=\"\" />\n                        </div>\n                        <div className=\"ml-4\">\n                          <div className=\"text-sm font-medium text-gray-900\">{person.name}</div>\n                          <div className=\"text-sm text-gray-500\">{person.email}</div>\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-900\">{person.title}</div>\n                      <div className=\"text-sm text-gray-500\">{person.department}</div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800\">\n                        Active\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{person.role}</td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                      <a href=\"#\" className=\"text-indigo-600 hover:text-indigo-900\">\n                        Edit\n                      </a>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Wallet from './pages/Wallet';\nimport teste from './pages/teste';\nimport \"tailwindcss/tailwind.css\"\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={ Login } />\n      <Route exact path=\"/carteira\" component={ Wallet } />\n      <Route exact path=\"/teste\" component={ teste } />\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { SET_USER_EMAIL } from '../actions';\n\nconst INITIAL_STATE = {\n  email: '',\n};\n\nconst user = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case SET_USER_EMAIL:\n    return { ...state, email: action.payload };\n  default:\n    return state;\n  }\n};\n\nexport default user;\n","import {\n  SET_COINS,\n  SET_EXPENDITURE,\n  DELETE_EXPENDITURE,\n  SET_CUR_EXPENDITURE,\n  EDIT_EXPENDITURE } from '../actions';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  isEditing: false,\n  curExpenditure: {},\n};\n\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case SET_COINS:\n    return {\n      ...state,\n      currencies: action.payload,\n    };\n  case SET_EXPENDITURE:\n    return {\n      ...state,\n      isEditing: false,\n      expenses: [\n        ...state.expenses,\n        {\n          id: state.expenses.length,\n          ...action.payload,\n        },\n      ],\n    };\n  case DELETE_EXPENDITURE:\n    return {\n      ...state,\n      isEditing: false,\n      expenses: state.expenses.filter((expense) => expense.id !== action.payload),\n    };\n  case SET_CUR_EXPENDITURE:\n    return {\n      ...state,\n      isEditing: true,\n      curExpenditure: state.expenses.find((cur) => cur.id === action.payload),\n    };\n  case EDIT_EXPENDITURE:\n    return {\n      ...state,\n      isEditing: false,\n      curExpenditure: {},\n      expenses: state.expenses.reduce((acc, cur) => {\n        const { payload } = action;\n        if (cur.id === payload.id) return [...acc, payload];\n        return [...acc, cur];\n      }, []),\n    };\n  default:\n    return state;\n  }\n};\n\nexport default wallet;\n","import { combineReducers } from 'redux';\nimport user from './user';\nimport wallet from './wallet';\n\nconst rootReducers = combineReducers({ user, wallet });\nexport default rootReducers;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducers from '../reducers';\n\nconst store = createStore(\n  rootReducers,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}