{"version":3,"sources":["services/coinApi.js","actions/index.js","pages/Login.js","components/Header.jsx","components/SelectInput.jsx","components/ExpenditureForm.jsx","components/DeleteAndEditButton.jsx","components/ExpenseTable.jsx","pages/Wallet.js","pages/teste.js","App.js","serviceWorker.js","reducers/user.js","reducers/wallet.js","reducers/index.js","store/index.js","index.js"],"names":["coinApi","fetch","then","res","json","USDT","Promise","resolve","catch","error","reject","SET_USER_EMAIL","SET_COINS","SET_EXPENDITURE","DELETE_EXPENDITURE","SET_CUR_EXPENDITURE","EDIT_EXPENDITURE","setCoins","coins","type","payload","Login","state","email","password","isEnable","formValidator","bind","handleChange","submitForm","this","test","length","setState","target","name","value","event","props","history","setEmailGlobal","preventDefault","push","className","onSubmit","htmlFor","id","placeholder","required","autoComplete","onChange","disabled","React","Component","connect","dispatch","setUserEmail","Header","getTotal","expenses","Number","reduce","acc","cur","exchangeRates","currency","ask","toFixed","user","wallet","SelectInput","label","options","map","key","INITIAL_FORM","description","method","tag","ExpenditureForm","forms","isEditing","submit","renderInputs","renderSelect","renderSubmitButton","prev","a","setExpenditure","editExpenditure","nextProps","curExpenditure","defaultProps","currencies","expenditure","setExpenditureAction","editExpenditureAction","DeleteAndEditButton","deleteExpense","editExpense","deleteById","setCurExpense","onClick","deleteExpenditure","setCurExpenseAction","ExpenseTable","renderTableRow","expense","replace","Wallet","getCoins","Object","keys","Exaample","src","alt","href","action","defaultValue","App","exact","path","component","teste","Boolean","window","location","hostname","match","INITIAL_STATE","filter","find","rootReducers","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.75c84c31.chunk.js","sourcesContent":["const coinApi = () => (\n  fetch('https://economia.awesomeapi.com.br/json/all')\n    .then((res) => res.json())\n    .then((res) => {\n      if (res.USDT) delete res.USDT;\n      return Promise.resolve(res);\n    })\n    .catch((error) => Promise.reject(error))\n);\n\nexport default coinApi;\n","import coinApi from '../services/coinApi';\n\nexport const SET_USER_EMAIL = 'SET_USER_EMAIL';\nexport const SET_COINS = 'SET_COINS';\nexport const SET_EXPENDITURE = 'SET_EXPENDITURE';\nexport const DELETE_EXPENDITURE = 'DELETE_EXPENDITURE';\nexport const SET_CUR_EXPENDITURE = 'SET_CUR_EXPENDITURE';\nexport const EDIT_EXPENDITURE = 'EDIT_EXPENDITURE';\n\nexport const setUserEmail = (email) => ({\n  type: SET_USER_EMAIL,\n  payload: email,\n});\n\nexport const setCoins = (coins) => ({\n  type: SET_COINS,\n  payload: coins,\n});\n\nexport const fetchCoins = () => async (dispatch) => {\n  // dispatch(uma action de loading)\n  const coins = await coinApi();\n  dispatch(setCoins(Object.keys(coins)));\n};\n\nexport const setExpenditure = (expenditure) => async (dispatch) => {\n  const exchangeRates = await coinApi();\n  dispatch({\n    type: SET_EXPENDITURE,\n    payload: { ...expenditure, exchangeRates },\n  });\n};\n\nexport const deleteExpenditure = (id) => ({\n  type: DELETE_EXPENDITURE,\n  payload: id,\n});\n\nexport const setCurExpenditure = (id) => ({\n  type: SET_CUR_EXPENDITURE,\n  payload: id,\n});\n\nexport const editExpenditure = (expenditure) => ({\n  type: EDIT_EXPENDITURE,\n  payload: expenditure,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { setUserEmail } from '../actions';\nimport { LockClosedIcon } from '@heroicons/react/solid'\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: '',\n      isEnable: false,\n    };\n    this.formValidator = this.formValidator.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.submitForm = this.submitForm.bind(this);\n  }\n\n  formValidator() {\n    const { email, password } = this.state;\n    const passwdLength = 6;\n    const regex = /^[a-z0-9.]+@[a-z0-9]+\\.[a-z]/i;\n    const isEnable = regex.test(email) && password.length >= passwdLength;\n    this.setState({ isEnable });\n  }\n\n  handleChange({ target: { name, value } }) {\n    this.setState({ [name]: value }, () => this.formValidator());\n  }\n\n  submitForm(event) {\n    const { email } = this.state;\n    const { history, setEmailGlobal } = this.props;\n    event.preventDefault();\n    setEmailGlobal(email);\n    history.push('/carteira');\n  }\n\n  render() {\n    const { isEnable } = this.state;\n    return (\n      <div className=\"min-h-full flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-md w-full space-y-8\">\n          <form className=\"mt-8 space-y-6\" onSubmit={this.submitForm}>\n            <div className=\"rounded-md shadow-sm -space-y-px\">\n              <div>\n                <label htmlFor=\"email-address\" className=\"sr-only\">\n                  Email\n                </label>\n                <input\n                  id=\"email-address\"\n                  name=\"email\"\n                  type=\"email\"\n                  data-testid=\"email-input\"\n                  placeholder=\"Email\"\n                  required\n                  autoComplete=\"email\"\n                  onChange={this.handleChange}\n                  className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                />\n              </div>\n              <div>\n                <label htmlFor=\"password\" className=\"sr-only\">\n                  Senha\n                </label>\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  data-testid=\"password-input\"\n                  autoComplete=\"current-password\"\n                  placeholder=\"Senha\"\n                  required\n                  className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                  onChange={this.handleChange}\n                />\n              </div>\n            </div>\n            <div>\n              <button\n                type=\"submit\"\n                className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                disabled={!isEnable}\n              >\n                <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\">\n                  {isEnable ? null : <LockClosedIcon className=\"h-5 w-5 text-indigo-500 group-hover:text-indigo-400\" aria-hidden=\"true\" />}\n                </span>\n                Entrar\n              </button>\n            </div>\n            \n            \n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\n  setEmailGlobal: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  setEmailGlobal: (email) => dispatch(setUserEmail(email)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass Header extends React.Component {\n  constructor() {\n    super();\n    this.getTotal = this.getTotal.bind(this);\n  }\n\n  getTotal() {\n    const { expenses } = this.props;\n    return Number(expenses.reduce((acc, cur) => {\n      const brlValue = Number(cur.value) * Number(cur.exchangeRates[cur.currency].ask);\n      return acc + brlValue;\n    }, 0)).toFixed(2);\n  }\n\n  render() {\n    const { email } = this.props;\n    return (\n      <header>\n        <h1 data-testid=\"email-field\">{email}</h1>\n        <h2 data-testid=\"total-field\">{this.getTotal()}</h2>\n        <h2 data-testid=\"header-currency-field\">BRL</h2>\n      </header>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  email: state.user.email,\n  expenses: state.wallet.expenses,\n});\n\nHeader.propTypes = {\n  email: PropTypes.string.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.any).isRequired,\n};\n\nexport default connect(mapStateToProps)(Header);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass SelectInput extends React.Component {\n  render() {\n    const { id, value, label, options, onChange } = this.props;\n    return (\n      <label htmlFor={ id }>\n        {label}\n        <select onChange={ onChange } id={ id } value={ value }>\n          {options.map((cur) => <option key={ cur }>{cur}</option>)}\n        </select>\n      </label>\n    );\n  }\n}\n\nSelectInput.propTypes = {\n  id: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  options: PropTypes.arrayOf(PropTypes.any).isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default SelectInput;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport SelectInput from './SelectInput';\nimport {\n  setExpenditure as setExpenditureAction,\n  editExpenditure as editExpenditureAction } from '../actions';\n\nconst INITIAL_FORM = {\n  value: '',\n  description: '',\n  currency: 'USD',\n  method: 'Dinheiro',\n  tag: 'Alimentação',\n};\n\nclass ExpenditureForm extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      forms: INITIAL_FORM,\n      isEditing: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.submit = this.submit.bind(this);\n    this.renderInputs = this.renderInputs.bind(this);\n    this.renderSelect = this.renderSelect.bind(this);\n    this.renderSubmitButton = this.renderSubmitButton.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, state) {\n    const { isEditing, curExpenditure } = nextProps;\n    if (isEditing && isEditing !== state.isEditing) {\n      return {\n        forms: curExpenditure,\n        isEditing,\n      };\n    } if (!isEditing && isEditing !== state.isEditing) {\n      return {\n        forms: INITIAL_FORM,\n        isEditing,\n      };\n    }\n    return null;\n  }\n\n  handleChange({ target: { id, value } }) {\n    this.setState((prev) => ({ forms: { ...prev.forms, [id]: value } }));\n  }\n\n  async submit(event) {\n    event.preventDefault();\n    const { setExpenditure, editExpenditure } = this.props;\n    const { forms, isEditing } = this.state;\n    if (isEditing) return editExpenditure(forms);\n    setExpenditure(forms);\n    this.setState({ forms: INITIAL_FORM });\n  }\n\n  renderInputs() {\n    const { forms: { value, description } } = this.state;\n    return (\n      <>\n        <label htmlFor=\"value\">\n          Valor\n          <input\n            type=\"number\"\n            id=\"value\"\n            value={ value }\n            placeholder=\"Valor\"\n            onChange={ this.handleChange }\n          />\n        </label>\n        <label htmlFor=\"description\">\n          Descrição\n          <input\n            type=\"text\"\n            id=\"description\"\n            value={ description }\n            placeholder=\"Descrição\"\n            onChange={ this.handleChange }\n          />\n        </label>\n      </>\n    );\n  }\n\n  renderSelect() {\n    const { coins } = this.props;\n    const { forms: { currency, method, tag } } = this.state;\n    return (\n      <>\n        <SelectInput\n          id=\"currency\"\n          label=\"Moeda\"\n          value={ currency }\n          options={ coins }\n          onChange={ this.handleChange }\n        />\n        <SelectInput\n          id=\"method\"\n          label=\"Método de pagamento\"\n          value={ method }\n          onChange={ this.handleChange }\n          options={ ['Dinheiro', 'Cartão de crédito', 'Cartão de débito'] }\n        />\n        <SelectInput\n          id=\"tag\"\n          label=\"Tag\"\n          value={ tag }\n          onChange={ this.handleChange }\n          options={ ['Alimentação', 'Lazer', 'Trabalho', 'Transporte', 'Saúde'] }\n        />\n      </>\n    );\n  }\n\n  renderSubmitButton() {\n    const { isEditing } = this.state;\n    if (!isEditing) return (<input type=\"submit\" value=\"Adicionar despesa\" />);\n    return (<input type=\"submit\" value=\"Editar despesa\" />);\n  }\n\n  render() {\n    return (\n      <form onSubmit={ this.submit }>\n        {this.renderInputs()}\n        {this.renderSelect()}\n        {this.renderSubmitButton()}\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = ({ wallet }) => ({\n  coins: wallet.currencies,\n  isEditing: wallet.isEditing,\n  curExpenditure: wallet.curExpenditure,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setExpenditure: (expenditure) => dispatch(setExpenditureAction(expenditure)),\n  editExpenditure: (expenditure) => dispatch(editExpenditureAction(expenditure)),\n});\n\nExpenditureForm.propTypes = {\n  coins: PropTypes.arrayOf(PropTypes.string).isRequired,\n  isEditing: PropTypes.bool,\n  curExpenditure: PropTypes.objectOf(PropTypes.any),\n  setExpenditure: PropTypes.func.isRequired,\n  editExpenditure: PropTypes.func.isRequired,\n};\n\nExpenditureForm.defaultProps = {\n  isEditing: false,\n  curExpenditure: {},\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenditureForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteExpenditure, setCurExpenditure as setCurExpenseAction } from '../actions';\n\nclass DeleteAndEditButton extends React.Component {\n  constructor() {\n    super();\n    this.deleteExpense = this.deleteExpense.bind(this);\n    this.editExpense = this.editExpense.bind(this);\n  }\n\n  deleteExpense() {\n    const { id, deleteById } = this.props;\n    deleteById(id);\n  }\n\n  editExpense() {\n    const { id, setCurExpense } = this.props;\n    setCurExpense(id);\n  }\n\n  render() {\n    return (\n      <>\n        <input\n          type=\"button\"\n          value=\"Deletar\"\n          data-testid=\"delete-btn\"\n          onClick={ this.deleteExpense }\n        />\n        <input\n          type=\"button\"\n          value=\"Editar\"\n          data-testid=\"edit-btn\"\n          onClick={ this.editExpense }\n        />\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteById: (id) => dispatch(deleteExpenditure(id)),\n  setCurExpense: (id) => dispatch(setCurExpenseAction(id)),\n});\n\nDeleteAndEditButton.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  deleteById: PropTypes.func.isRequired,\n  setCurExpense: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(DeleteAndEditButton);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport DeleteAndEditButton from './DeleteAndEditButton';\n\nclass ExpenseTable extends React.Component {\n  constructor() {\n    super();\n    this.renderTableRow = this.renderTableRow.bind(this);\n  }\n\n  renderTableRow(expense) {\n    const { id, value, description, currency, method, tag, exchangeRates } = expense;\n    return (\n      <tr key={ id }>\n        <td>{description}</td>\n        <td>{tag}</td>\n        <td>{method}</td>\n        {/* <td>{`${currency} ${value}`}</td> */}\n        <td>{value}</td>\n        <td>{ exchangeRates[currency].name.replace('/Real Brasileiro', '') }</td>\n        <td>{ Number(exchangeRates[currency].ask).toFixed(2) }</td>\n        <td>{ Number(exchangeRates[currency].ask) * Number(value) }</td>\n        <td>Real</td>\n        <td><DeleteAndEditButton id={ id } /></td>\n      </tr>\n    );\n  }\n\n  render() {\n    const { expenses } = this.props;\n    return (\n      <table>\n        <thead>\n          <tr>\n            <th>Descrição</th>\n            <th>Tag</th>\n            <th>Método de pagamento</th>\n            <th>Valor</th>\n            <th>Moeda</th>\n            <th>Câmbio utilizado</th>\n            <th>Valor convertido</th>\n            <th>Moeda de conversão</th>\n            <th>Editar/Excluir</th>\n          </tr>\n        </thead>\n        <tbody>\n          {expenses.map(this.renderTableRow)}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n});\n\nExpenseTable.propTypes = {\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default connect(mapStateToProps)(ExpenseTable);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport ExpenditureForm from '../components/ExpenditureForm';\nimport ExpenseTable from '../components/ExpenseTable';\nimport { fetchCoins } from '../actions';\n\nclass Wallet extends React.Component {\n  componentDidMount() {\n    const { getCoins } = this.props;\n    getCoins();\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <ExpenditureForm />\n        <ExpenseTable />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  getCoins: () => dispatch(fetchCoins()),\n});\n\nWallet.propTypes = {\n  getCoins: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Wallet);\n","// class teste extends React.Component {\n//   render () {\n//     return ();\n//   }\n// }\n\n// export default teste;\n\n/* This example requires Tailwind CSS v2.0+ */\nimport React from \"react\"\n\n\n/*\n  This example requires Tailwind CSS v2.0+ \n  \n  This example requires some changes to your config:\n  \n  ```\n  // tailwind.config.js\n  module.exports = {\n    // ...\n    theme: {\n      extend: {\n        gridTemplateRows: {\n          '[auto,auto,1fr]': 'auto auto 1fr',\n        },\n      },\n    },\n    plugins: [\n      // ...\n      require('@tailwindcss/aspect-ratio'),\n    ],\n  }\n  ```\n*/\nimport { useState } from 'react'\nimport { StarIcon } from '@heroicons/react/solid'\nimport { RadioGroup } from '@headlessui/react'\n\nconst product = {\n  name: 'Basic Tee 6-Pack',\n  price: '$192',\n  href: '#',\n  breadcrumbs: [\n    { id: 1, name: 'Men', href: '#' },\n    { id: 2, name: 'Clothing', href: '#' },\n  ],\n  images: [\n    {\n      src: 'https://tailwindui.com/img/ecommerce-images/product-page-02-secondary-product-shot.jpg',\n      alt: 'Two each of gray, white, and black shirts laying flat.',\n    },\n    {\n      src: 'https://tailwindui.com/img/ecommerce-images/product-page-02-tertiary-product-shot-01.jpg',\n      alt: 'Model wearing plain black basic tee.',\n    },\n    {\n      src: 'https://tailwindui.com/img/ecommerce-images/product-page-02-tertiary-product-shot-02.jpg',\n      alt: 'Model wearing plain gray basic tee.',\n    },\n    {\n      src: 'https://tailwindui.com/img/ecommerce-images/product-page-02-featured-product-shot.jpg',\n      alt: 'Model wearing plain white basic tee.',\n    },\n  ],\n  colors: [\n    { name: 'White', class: 'bg-white', selectedClass: 'ring-gray-400' },\n    { name: 'Gray', class: 'bg-gray-200', selectedClass: 'ring-gray-400' },\n    { name: 'Black', class: 'bg-gray-900', selectedClass: 'ring-gray-900' },\n  ],\n  sizes: [\n    { name: 'XXS', inStock: false },\n    { name: 'XS', inStock: true },\n    { name: 'S', inStock: true },\n    { name: 'M', inStock: true },\n    { name: 'L', inStock: true },\n    { name: 'XL', inStock: true },\n    { name: '2XL', inStock: true },\n    { name: '3XL', inStock: true },\n  ],\n  description:\n    'The Basic Tee 6-Pack allows you to fully express your vibrant personality with three grayscale options. Feeling adventurous? Put on a heather gray tee. Want to be a trendsetter? Try our exclusive colorway: \"Black\". Need to add an extra pop of color to your outfit? Our white tee has you covered.',\n  highlights: [\n    'Hand cut and sewn locally',\n    'Dyed with our proprietary colors',\n    'Pre-washed & pre-shrunk',\n    'Ultra-soft 100% cotton',\n  ],\n  details:\n    'The 6-Pack includes two black, two white, and two heather gray Basic Tees. Sign up for our subscription service and be the first to get new, exciting colors, like our upcoming \"Charcoal Gray\" limited release.',\n}\nconst reviews = { href: '#', average: 4, totalCount: 117 }\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport function Example() {\n  const [selectedColor, setSelectedColor] = useState(product.colors[0])\n  const [selectedSize, setSelectedSize] = useState(product.sizes[2])\n\n  return (\n    <div className=\"bg-white\">\n      <div className=\"pt-6\">\n        <nav aria-label=\"Breadcrumb\">\n          <ol role=\"list\" className=\"max-w-2xl mx-auto px-4 flex items-center space-x-2 sm:px-6 lg:max-w-7xl lg:px-8\">\n            {product.breadcrumbs.map((breadcrumb) => (\n              <li key={breadcrumb.id}>\n                <div className=\"flex items-center\">\n                  <a href={breadcrumb.href} className=\"mr-2 text-sm font-medium text-gray-900\">\n                    {breadcrumb.name}\n                  </a>\n                  <svg\n                    width={16}\n                    height={20}\n                    viewBox=\"0 0 16 20\"\n                    fill=\"currentColor\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    aria-hidden=\"true\"\n                    className=\"w-4 h-5 text-gray-300\"\n                  >\n                    <path d=\"M5.697 4.34L8.98 16.532h1.327L7.025 4.341H5.697z\" />\n                  </svg>\n                </div>\n              </li>\n            ))}\n            <li className=\"text-sm\">\n              <a href={product.href} aria-current=\"page\" className=\"font-medium text-gray-500 hover:text-gray-600\">\n                {product.name}\n              </a>\n            </li>\n          </ol>\n        </nav>\n\n        {/* Image gallery */}\n        <div className=\"mt-6 max-w-2xl mx-auto sm:px-6 lg:max-w-7xl lg:px-8 lg:grid lg:grid-cols-3 lg:gap-x-8\">\n          <div className=\"hidden aspect-w-3 aspect-h-4 rounded-lg overflow-hidden lg:block\">\n            <img\n              src={product.images[0].src}\n              alt={product.images[0].alt}\n              className=\"w-full h-full object-center object-cover\"\n            />\n          </div>\n          <div className=\"hidden lg:grid lg:grid-cols-1 lg:gap-y-8\">\n            <div className=\"aspect-w-3 aspect-h-2 rounded-lg overflow-hidden\">\n              <img\n                src={product.images[1].src}\n                alt={product.images[1].alt}\n                className=\"w-full h-full object-center object-cover\"\n              />\n            </div>\n            <div className=\"aspect-w-3 aspect-h-2 rounded-lg overflow-hidden\">\n              <img\n                src={product.images[2].src}\n                alt={product.images[2].alt}\n                className=\"w-full h-full object-center object-cover\"\n              />\n            </div>\n          </div>\n          <div className=\"aspect-w-4 aspect-h-5 sm:rounded-lg sm:overflow-hidden lg:aspect-w-3 lg:aspect-h-4\">\n            <img\n              src={product.images[3].src}\n              alt={product.images[3].alt}\n              className=\"w-full h-full object-center object-cover\"\n            />\n          </div>\n        </div>\n\n        {/* Product info */}\n        <div className=\"max-w-2xl mx-auto pt-10 pb-16 px-4 sm:px-6 lg:max-w-7xl lg:pt-16 lg:pb-24 lg:px-8 lg:grid lg:grid-cols-3 lg:grid-rows-[auto,auto,1fr] lg:gap-x-8\">\n          <div className=\"lg:col-span-2 lg:border-r lg:border-gray-200 lg:pr-8\">\n            <h1 className=\"text-2xl font-extrabold tracking-tight text-gray-900 sm:text-3xl\">{product.name}</h1>\n          </div>\n\n          {/* Options */}\n          <div className=\"mt-4 lg:mt-0 lg:row-span-3\">\n            <h2 className=\"sr-only\">Product information</h2>\n            <p className=\"text-3xl text-gray-900\">{product.price}</p>\n\n            {/* Reviews */}\n            <div className=\"mt-6\">\n              <h3 className=\"sr-only\">Reviews</h3>\n              <div className=\"flex items-center\">\n                <div className=\"flex items-center\">\n                  {[0, 1, 2, 3, 4].map((rating) => (\n                    <StarIcon\n                      key={rating}\n                      className={classNames(\n                        reviews.average > rating ? 'text-gray-900' : 'text-gray-200',\n                        'h-5 w-5 flex-shrink-0'\n                      )}\n                      aria-hidden=\"true\"\n                    />\n                  ))}\n                </div>\n                <p className=\"sr-only\">{reviews.average} out of 5 stars</p>\n                <a href={reviews.href} className=\"ml-3 text-sm font-medium text-indigo-600 hover:text-indigo-500\">\n                  {reviews.totalCount} reviews\n                </a>\n              </div>\n            </div>\n\n            <form className=\"mt-10\">\n              {/* Colors */}\n              <div>\n                <h3 className=\"text-sm text-gray-900 font-medium\">Color</h3>\n\n                <RadioGroup value={selectedColor} onChange={setSelectedColor} className=\"mt-4\">\n                  <RadioGroup.Label className=\"sr-only\">Choose a color</RadioGroup.Label>\n                  <div className=\"flex items-center space-x-3\">\n                    {product.colors.map((color) => (\n                      <RadioGroup.Option\n                        key={color.name}\n                        value={color}\n                        className={({ active, checked }) =>\n                          classNames(\n                            color.selectedClass,\n                            active && checked ? 'ring ring-offset-1' : '',\n                            !active && checked ? 'ring-2' : '',\n                            '-m-0.5 relative p-0.5 rounded-full flex items-center justify-center cursor-pointer focus:outline-none'\n                          )\n                        }\n                      >\n                        <RadioGroup.Label as=\"p\" className=\"sr-only\">\n                          {color.name}\n                        </RadioGroup.Label>\n                        <span\n                          aria-hidden=\"true\"\n                          className={classNames(\n                            color.class,\n                            'h-8 w-8 border border-black border-opacity-10 rounded-full'\n                          )}\n                        />\n                      </RadioGroup.Option>\n                    ))}\n                  </div>\n                </RadioGroup>\n              </div>\n\n              {/* Sizes */}\n              <div className=\"mt-10\">\n                <div className=\"flex items-center justify-between\">\n                  <h3 className=\"text-sm text-gray-900 font-medium\">Size</h3>\n                  <a href=\"#\" className=\"text-sm font-medium text-indigo-600 hover:text-indigo-500\">\n                    Size guide\n                  </a>\n                </div>\n\n                <RadioGroup value={selectedSize} onChange={setSelectedSize} className=\"mt-4\">\n                  <RadioGroup.Label className=\"sr-only\">Choose a size</RadioGroup.Label>\n                  <div className=\"grid grid-cols-4 gap-4 sm:grid-cols-8 lg:grid-cols-4\">\n                    {product.sizes.map((size) => (\n                      <RadioGroup.Option\n                        key={size.name}\n                        value={size}\n                        disabled={!size.inStock}\n                        className={({ active }) =>\n                          classNames(\n                            size.inStock\n                              ? 'bg-white shadow-sm text-gray-900 cursor-pointer'\n                              : 'bg-gray-50 text-gray-200 cursor-not-allowed',\n                            active ? 'ring-2 ring-indigo-500' : '',\n                            'group relative border rounded-md py-3 px-4 flex items-center justify-center text-sm font-medium uppercase hover:bg-gray-50 focus:outline-none sm:flex-1 sm:py-6'\n                          )\n                        }\n                      >\n                        {({ active, checked }) => (\n                          <>\n                            <RadioGroup.Label as=\"p\">{size.name}</RadioGroup.Label>\n                            {size.inStock ? (\n                              <div\n                                className={classNames(\n                                  active ? 'border' : 'border-2',\n                                  checked ? 'border-indigo-500' : 'border-transparent',\n                                  'absolute -inset-px rounded-md pointer-events-none'\n                                )}\n                                aria-hidden=\"true\"\n                              />\n                            ) : (\n                              <div\n                                aria-hidden=\"true\"\n                                className=\"absolute -inset-px rounded-md border-2 border-gray-200 pointer-events-none\"\n                              >\n                                <svg\n                                  className=\"absolute inset-0 w-full h-full text-gray-200 stroke-2\"\n                                  viewBox=\"0 0 100 100\"\n                                  preserveAspectRatio=\"none\"\n                                  stroke=\"currentColor\"\n                                >\n                                  <line x1={0} y1={100} x2={100} y2={0} vectorEffect=\"non-scaling-stroke\" />\n                                </svg>\n                              </div>\n                            )}\n                          </>\n                        )}\n                      </RadioGroup.Option>\n                    ))}\n                  </div>\n                </RadioGroup>\n              </div>\n\n              <button\n                type=\"submit\"\n                className=\"mt-10 w-full bg-indigo-600 border border-transparent rounded-md py-3 px-8 flex items-center justify-center text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n              >\n                Add to bag\n              </button>\n            </form>\n          </div>\n\n          <div className=\"py-10 lg:pt-6 lg:pb-16 lg:col-start-1 lg:col-span-2 lg:border-r lg:border-gray-200 lg:pr-8\">\n            {/* Description and details */}\n            <div>\n              <h3 className=\"sr-only\">Description</h3>\n\n              <div className=\"space-y-6\">\n                <p className=\"text-base text-gray-900\">{product.description}</p>\n              </div>\n            </div>\n\n            <div className=\"mt-10\">\n              <h3 className=\"text-sm font-medium text-gray-900\">Highlights</h3>\n\n              <div className=\"mt-4\">\n                <ul role=\"list\" className=\"pl-4 list-disc text-sm space-y-2\">\n                  {product.highlights.map((highlight) => (\n                    <li key={highlight} className=\"text-gray-400\">\n                      <span className=\"text-gray-600\">{highlight}</span>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n\n            <div className=\"mt-10\">\n              <h2 className=\"text-sm font-medium text-gray-900\">Details</h2>\n\n              <div className=\"mt-4 space-y-6\">\n                <p className=\"text-sm text-gray-600\">{product.details}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nimport { LockClosedIcon } from '@heroicons/react/solid'\n\nexport default function Exaample() {\n  return (\n    <>\n      {/*\n        This example requires updating your template:\n\n        ```\n        <html class=\"h-full bg-gray-50\">\n        <body class=\"h-full\">\n        ```\n      */}\n      <div className=\"min-h-full flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-md w-full space-y-8\">\n          <div>\n            <img\n              className=\"mx-auto h-12 w-auto\"\n              src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\n              alt=\"Workflow\"\n            />\n            <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Sign in to your account</h2>\n            <p className=\"mt-2 text-center text-sm text-gray-600\">\n              Or{' '}\n              <a href=\"#\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\n                start your 14-day free trial\n              </a>\n            </p>\n          </div>\n          <form className=\"mt-8 space-y-6\" action=\"#\" method=\"POST\">\n            <input type=\"hidden\" name=\"remember\" defaultValue=\"true\" />\n            <div className=\"rounded-md shadow-sm -space-y-px\">\n              <div>\n                <label htmlFor=\"email-address\" className=\"sr-only\">\n                  Email address\n                </label>\n                <input\n                  id=\"email-address\"\n                  name=\"email\"\n                  type=\"email\"\n                  autoComplete=\"email\"\n                  required\n                  className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                  placeholder=\"Email address\"\n                />\n              </div>\n              <div>\n                <label htmlFor=\"password\" className=\"sr-only\">\n                  Password\n                </label>\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  autoComplete=\"current-password\"\n                  required\n                  className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                  placeholder=\"Password\"\n                />\n              </div>\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <input\n                  id=\"remember-me\"\n                  name=\"remember-me\"\n                  type=\"checkbox\"\n                  className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n                />\n                <label htmlFor=\"remember-me\" className=\"ml-2 block text-sm text-gray-900\">\n                  Remember me\n                </label>\n              </div>\n\n              <div className=\"text-sm\">\n                <a href=\"#\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\n                  Forgot your password?\n                </a>\n              </div>\n            </div>\n\n            <div>\n              <button\n                type=\"submit\"\n                className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n              >\n                <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\">\n                  <LockClosedIcon className=\"h-5 w-5 text-indigo-500 group-hover:text-indigo-400\" aria-hidden=\"true\" />\n                </span>\n                Sign in\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </>\n  )\n}","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Wallet from './pages/Wallet';\nimport teste from './pages/teste';\nimport \"tailwindcss/tailwind.css\"\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={ Login } />\n      <Route exact path=\"/carteira\" component={ Wallet } />\n      <Route exact path=\"/teste\" component={ teste } />\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { SET_USER_EMAIL } from '../actions';\n\nconst INITIAL_STATE = {\n  email: '',\n};\n\nconst user = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case SET_USER_EMAIL:\n    return { ...state, email: action.payload };\n  default:\n    return state;\n  }\n};\n\nexport default user;\n","import {\n  SET_COINS,\n  SET_EXPENDITURE,\n  DELETE_EXPENDITURE,\n  SET_CUR_EXPENDITURE,\n  EDIT_EXPENDITURE } from '../actions';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  isEditing: false,\n  curExpenditure: {},\n};\n\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case SET_COINS:\n    return {\n      ...state,\n      currencies: action.payload,\n    };\n  case SET_EXPENDITURE:\n    return {\n      ...state,\n      isEditing: false,\n      expenses: [\n        ...state.expenses,\n        {\n          id: state.expenses.length,\n          ...action.payload,\n        },\n      ],\n    };\n  case DELETE_EXPENDITURE:\n    return {\n      ...state,\n      isEditing: false,\n      expenses: state.expenses.filter((expense) => expense.id !== action.payload),\n    };\n  case SET_CUR_EXPENDITURE:\n    return {\n      ...state,\n      isEditing: true,\n      curExpenditure: state.expenses.find((cur) => cur.id === action.payload),\n    };\n  case EDIT_EXPENDITURE:\n    return {\n      ...state,\n      isEditing: false,\n      curExpenditure: {},\n      expenses: state.expenses.reduce((acc, cur) => {\n        const { payload } = action;\n        if (cur.id === payload.id) return [...acc, payload];\n        return [...acc, cur];\n      }, []),\n    };\n  default:\n    return state;\n  }\n};\n\nexport default wallet;\n","import { combineReducers } from 'redux';\nimport user from './user';\nimport wallet from './wallet';\n\nconst rootReducers = combineReducers({ user, wallet });\nexport default rootReducers;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducers from '../reducers';\n\nconst store = createStore(\n  rootReducers,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}